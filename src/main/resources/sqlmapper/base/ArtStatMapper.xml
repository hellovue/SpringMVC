<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.github.spring.base.mapper.ArtStatMapper">
  <resultMap id="BaseResultMap" type="org.github.spring.base.entity.ArtStatEntity">
  <id column="tid" jdbcType="VARCHAR" property="tid" />
  <result column="read_count" jdbcType="INTEGER" property="readCount" />
  <result column="upvote" jdbcType="INTEGER" property="upvote" />
  </resultMap>
  <sql id="Example_Where_Clause">
  <where>
    <foreach collection="oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
  <where>
    <foreach collection="example.oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Base_Column_List">
  tid, read_count, upvote
  </sql>
  <select id="selectByExample" parameterType="org.github.spring.base.example.ArtStatExample" resultMap="BaseResultMap">
  select
  <if test="distinct">
    distinct
  </if>
  <include refid="Base_Column_List" />
  from sampledb.t_art_stat
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null">
    order by ${orderByClause}
  </if>
  </select>
  <delete id="deleteByExample" parameterType="org.github.spring.base.example.ArtStatExample">
  delete from sampledb.t_art_stat
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </delete>
  <insert id="insertSelective" parameterType="org.github.spring.base.entity.ArtStatEntity">
  insert into sampledb.t_art_stat
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="tid != null">
    tid,
    </if>
    <if test="readCount != null">
    read_count,
    </if>
    <if test="upvote != null">
    upvote,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="tid != null">
    #{tid,jdbcType=VARCHAR},
    </if>
    <if test="readCount != null">
    #{readCount,jdbcType=INTEGER},
    </if>
    <if test="upvote != null">
    #{upvote,jdbcType=INTEGER},
    </if>
  </trim>
  </insert>
  <select id="countByExample" parameterType="org.github.spring.base.example.ArtStatExample" resultType="java.lang.Long">
  select count(*) from sampledb.t_art_stat
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
  update sampledb.t_art_stat
  <set>
    <if test="record.tid != null">
    tid = #{record.tid,jdbcType=VARCHAR},
    </if>
    <if test="record.readCount != null">
    read_count = #{record.readCount,jdbcType=INTEGER},
    </if>
    <if test="record.upvote != null">
    upvote = #{record.upvote,jdbcType=INTEGER},
    </if>
  </set>
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByExample" parameterType="map">
  update sampledb.t_art_stat
  set tid = #{record.tid,jdbcType=VARCHAR},
    read_count = #{record.readCount,jdbcType=INTEGER},
    upvote = #{record.upvote,jdbcType=INTEGER}
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.github.spring.base.entity.ArtStatEntity">
  update sampledb.t_art_stat
  <set>
    <if test="readCount != null">
    read_count = #{readCount,jdbcType=INTEGER},
    </if>
    <if test="upvote != null">
    upvote = #{upvote,jdbcType=INTEGER},
    </if>
  </set>
  where tid = #{tid,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    insert into sampledb.t_art_stat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      tid,
      read_count,
      upvote,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
      #{item.tid,jdbcType=VARCHAR},
      #{item.readCount,jdbcType=INTEGER},
      #{item.upvote,jdbcType=INTEGER},
      </trim>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </insert>
  <update id="batchUpdate" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    <foreach collection="list" index="index" item="item" separator=";">
       update sampledb.t_art_stat
      <set>
      <trim suffixOverrides=",">
        <if test="item.readCount != null">
        read_count = #{item.readCount,jdbcType=INTEGER},
        </if>
        <if test="item.upvote != null">
        upvote = #{item.upvote,jdbcType=INTEGER},
        </if>
      </trim>
      </set>
      <where>
      <trim suffixOverrides=",">
        tid = #{item.tid,jdbcType=VARCHAR},
      </trim>
      </where>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </update>
  <sql id="Identifiers_Array_Conditions">
  <foreach collection="array" index="index" item="item" separator=" and ">
    <if test="item == 'tid'">
    tid = #{record.tid,jdbcType=VARCHAR}
    </if>
    <if test="item == 'readCount'">
    read_count = #{record.readCount,jdbcType=INTEGER}
    </if>
    <if test="item == 'upvote'">
    upvote = #{record.upvote,jdbcType=INTEGER}
    </if>
  </foreach>
  </sql>
  <update id="upsert" parameterType="map">
  insert into sampledb.t_art_stat
  <trim prefix="(" suffix=")" suffixOverrides=",">
    tid,
    read_count,
    upvote,
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    #{record.tid,jdbcType=VARCHAR},
    #{record.readCount,jdbcType=INTEGER},
    #{record.upvote,jdbcType=INTEGER},
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    tid = #{record.tid,jdbcType=VARCHAR},
    read_count = #{record.readCount,jdbcType=INTEGER},
    upvote = #{record.upvote,jdbcType=INTEGER},
  </trim>
  </update>
  <update id="upsertSelective" parameterType="map">
  insert into sampledb.t_art_stat
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.tid != null">
    tid,
    </if>
    <if test="record.readCount != null">
    read_count,
    </if>
    <if test="record.upvote != null">
    upvote,
    </if>
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.tid != null">
    #{record.tid,jdbcType=VARCHAR},
    </if>
    <if test="record.readCount != null">
    #{record.readCount,jdbcType=INTEGER},
    </if>
    <if test="record.upvote != null">
    #{record.upvote,jdbcType=INTEGER},
    </if>
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    <if test="record.tid != null">
    tid = #{record.tid,jdbcType=VARCHAR},
    </if>
    <if test="record.readCount != null">
    read_count = #{record.readCount,jdbcType=INTEGER},
    </if>
    <if test="record.upvote != null">
    upvote = #{record.upvote,jdbcType=INTEGER},
    </if>
  </trim>
  </update>
  <select id="selectByUniqueKey" parameterType="org.github.spring.base.entity.ArtStatEntity" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from sampledb.t_art_stat
  <where>
    <trim suffixOverrides=",">
    <if test="record.readCount != null">
      read_count = #{record.readCount,jdbcType=INTEGER},
    </if>
    <if test="record.upvote != null">
      upvote = #{record.upvote,jdbcType=INTEGER},
    </if>
    </trim>
  </where>
  </select>
</mapper>