<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.github.spring.base.mapper.SourceMapper">
  <resultMap id="BaseResultMap" type="org.github.spring.base.entity.SourceEntity">
  <id column="source_id" jdbcType="VARCHAR" property="sourceId" />
  <result column="user_id" jdbcType="VARCHAR" property="userId" />
  <result column="title" jdbcType="VARCHAR" property="title" />
  <result column="type" jdbcType="VARCHAR" property="type" />
  <result column="sdecotation" jdbcType="VARCHAR" property="sdecotation" />
  <result column="source_url" jdbcType="VARCHAR" property="sourceUrl" />
  <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
  <where>
    <foreach collection="oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
  <where>
    <foreach collection="example.oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Base_Column_List">
  source_id, user_id, title, `type`, sdecotation, source_url, create_time
  </sql>
  <select id="selectByExample" parameterType="org.github.spring.base.example.SourceExample" resultMap="BaseResultMap">
  select
  <if test="distinct">
    distinct
  </if>
  <include refid="Base_Column_List" />
  from sampledb.t_source
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null">
    order by ${orderByClause}
  </if>
  </select>
  <delete id="deleteByExample" parameterType="org.github.spring.base.example.SourceExample">
  delete from sampledb.t_source
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </delete>
  <insert id="insertSelective" parameterType="org.github.spring.base.entity.SourceEntity">
  insert into sampledb.t_source
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="sourceId != null">
    source_id,
    </if>
    <if test="userId != null">
    user_id,
    </if>
    <if test="title != null">
    title,
    </if>
    <if test="type != null">
    `type`,
    </if>
    <if test="sdecotation != null">
    sdecotation,
    </if>
    <if test="sourceUrl != null">
    source_url,
    </if>
    <if test="createTime != null">
    create_time,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="sourceId != null">
    #{sourceId,jdbcType=VARCHAR},
    </if>
    <if test="userId != null">
    #{userId,jdbcType=VARCHAR},
    </if>
    <if test="title != null">
    #{title,jdbcType=VARCHAR},
    </if>
    <if test="type != null">
    #{type,jdbcType=VARCHAR},
    </if>
    <if test="sdecotation != null">
    #{sdecotation,jdbcType=VARCHAR},
    </if>
    <if test="sourceUrl != null">
    #{sourceUrl,jdbcType=VARCHAR},
    </if>
    <if test="createTime != null">
    #{createTime,jdbcType=TIMESTAMP},
    </if>
  </trim>
  </insert>
  <select id="countByExample" parameterType="org.github.spring.base.example.SourceExample" resultType="java.lang.Long">
  select count(*) from sampledb.t_source
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
  update sampledb.t_source
  <set>
    <if test="record.sourceId != null">
    source_id = #{record.sourceId,jdbcType=VARCHAR},
    </if>
    <if test="record.userId != null">
    user_id = #{record.userId,jdbcType=VARCHAR},
    </if>
    <if test="record.title != null">
    title = #{record.title,jdbcType=VARCHAR},
    </if>
    <if test="record.type != null">
    `type` = #{record.type,jdbcType=VARCHAR},
    </if>
    <if test="record.sdecotation != null">
    sdecotation = #{record.sdecotation,jdbcType=VARCHAR},
    </if>
    <if test="record.sourceUrl != null">
    source_url = #{record.sourceUrl,jdbcType=VARCHAR},
    </if>
    <if test="record.createTime != null">
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    </if>
  </set>
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByExample" parameterType="map">
  update sampledb.t_source
  set source_id = #{record.sourceId,jdbcType=VARCHAR},
    user_id = #{record.userId,jdbcType=VARCHAR},
    title = #{record.title,jdbcType=VARCHAR},
    `type` = #{record.type,jdbcType=VARCHAR},
    sdecotation = #{record.sdecotation,jdbcType=VARCHAR},
    source_url = #{record.sourceUrl,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP}
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.github.spring.base.entity.SourceEntity">
  update sampledb.t_source
  <set>
    <if test="userId != null">
    user_id = #{userId,jdbcType=VARCHAR},
    </if>
    <if test="title != null">
    title = #{title,jdbcType=VARCHAR},
    </if>
    <if test="type != null">
    `type` = #{type,jdbcType=VARCHAR},
    </if>
    <if test="sdecotation != null">
    sdecotation = #{sdecotation,jdbcType=VARCHAR},
    </if>
    <if test="sourceUrl != null">
    source_url = #{sourceUrl,jdbcType=VARCHAR},
    </if>
    <if test="createTime != null">
    create_time = #{createTime,jdbcType=TIMESTAMP},
    </if>
  </set>
  where source_id = #{sourceId,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    insert into sampledb.t_source
    <trim prefix="(" suffix=")" suffixOverrides=",">
      source_id,
      user_id,
      title,
      `type`,
      sdecotation,
      source_url,
      create_time,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
      #{item.sourceId,jdbcType=VARCHAR},
      #{item.userId,jdbcType=VARCHAR},
      #{item.title,jdbcType=VARCHAR},
      #{item.type,jdbcType=VARCHAR},
      #{item.sdecotation,jdbcType=VARCHAR},
      #{item.sourceUrl,jdbcType=VARCHAR},
      #{item.createTime,jdbcType=TIMESTAMP},
      </trim>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </insert>
  <update id="batchUpdate" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    <foreach collection="list" index="index" item="item" separator=";">
       update sampledb.t_source
      <set>
      <trim suffixOverrides=",">
        <if test="item.userId != null">
        user_id = #{item.userId,jdbcType=VARCHAR},
        </if>
        <if test="item.title != null">
        title = #{item.title,jdbcType=VARCHAR},
        </if>
        <if test="item.type != null">
        `type` = #{item.type,jdbcType=VARCHAR},
        </if>
        <if test="item.sdecotation != null">
        sdecotation = #{item.sdecotation,jdbcType=VARCHAR},
        </if>
        <if test="item.sourceUrl != null">
        source_url = #{item.sourceUrl,jdbcType=VARCHAR},
        </if>
        <if test="item.createTime != null">
        create_time = #{item.createTime,jdbcType=TIMESTAMP},
        </if>
      </trim>
      </set>
      <where>
      <trim suffixOverrides=",">
        source_id = #{item.sourceId,jdbcType=VARCHAR},
      </trim>
      </where>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </update>
  <sql id="Identifiers_Array_Conditions">
  <foreach collection="array" index="index" item="item" separator=" and ">
    <if test="item == 'sourceId'">
    source_id = #{record.sourceId,jdbcType=VARCHAR}
    </if>
    <if test="item == 'userId'">
    user_id = #{record.userId,jdbcType=VARCHAR}
    </if>
    <if test="item == 'title'">
    title = #{record.title,jdbcType=VARCHAR}
    </if>
    <if test="item == 'type'">
    `type` = #{record.type,jdbcType=VARCHAR}
    </if>
    <if test="item == 'sdecotation'">
    sdecotation = #{record.sdecotation,jdbcType=VARCHAR}
    </if>
    <if test="item == 'sourceUrl'">
    source_url = #{record.sourceUrl,jdbcType=VARCHAR}
    </if>
    <if test="item == 'createTime'">
    create_time = #{record.createTime,jdbcType=TIMESTAMP}
    </if>
  </foreach>
  </sql>
  <update id="upsert" parameterType="map">
  insert into sampledb.t_source
  <trim prefix="(" suffix=")" suffixOverrides=",">
    source_id,
    user_id,
    title,
    `type`,
    sdecotation,
    source_url,
    create_time,
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    #{record.sourceId,jdbcType=VARCHAR},
    #{record.userId,jdbcType=VARCHAR},
    #{record.title,jdbcType=VARCHAR},
    #{record.type,jdbcType=VARCHAR},
    #{record.sdecotation,jdbcType=VARCHAR},
    #{record.sourceUrl,jdbcType=VARCHAR},
    #{record.createTime,jdbcType=TIMESTAMP},
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    source_id = #{record.sourceId,jdbcType=VARCHAR},
    user_id = #{record.userId,jdbcType=VARCHAR},
    title = #{record.title,jdbcType=VARCHAR},
    `type` = #{record.type,jdbcType=VARCHAR},
    sdecotation = #{record.sdecotation,jdbcType=VARCHAR},
    source_url = #{record.sourceUrl,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
  </trim>
  </update>
  <update id="upsertSelective" parameterType="map">
  insert into sampledb.t_source
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.sourceId != null">
    source_id,
    </if>
    <if test="record.userId != null">
    user_id,
    </if>
    <if test="record.title != null">
    title,
    </if>
    <if test="record.type != null">
    `type`,
    </if>
    <if test="record.sdecotation != null">
    sdecotation,
    </if>
    <if test="record.sourceUrl != null">
    source_url,
    </if>
    <if test="record.createTime != null">
    create_time,
    </if>
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.sourceId != null">
    #{record.sourceId,jdbcType=VARCHAR},
    </if>
    <if test="record.userId != null">
    #{record.userId,jdbcType=VARCHAR},
    </if>
    <if test="record.title != null">
    #{record.title,jdbcType=VARCHAR},
    </if>
    <if test="record.type != null">
    #{record.type,jdbcType=VARCHAR},
    </if>
    <if test="record.sdecotation != null">
    #{record.sdecotation,jdbcType=VARCHAR},
    </if>
    <if test="record.sourceUrl != null">
    #{record.sourceUrl,jdbcType=VARCHAR},
    </if>
    <if test="record.createTime != null">
    #{record.createTime,jdbcType=TIMESTAMP},
    </if>
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    <if test="record.sourceId != null">
    source_id = #{record.sourceId,jdbcType=VARCHAR},
    </if>
    <if test="record.userId != null">
    user_id = #{record.userId,jdbcType=VARCHAR},
    </if>
    <if test="record.title != null">
    title = #{record.title,jdbcType=VARCHAR},
    </if>
    <if test="record.type != null">
    `type` = #{record.type,jdbcType=VARCHAR},
    </if>
    <if test="record.sdecotation != null">
    sdecotation = #{record.sdecotation,jdbcType=VARCHAR},
    </if>
    <if test="record.sourceUrl != null">
    source_url = #{record.sourceUrl,jdbcType=VARCHAR},
    </if>
    <if test="record.createTime != null">
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    </if>
  </trim>
  </update>
  <select id="selectByUniqueKey" parameterType="org.github.spring.base.entity.SourceEntity" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from sampledb.t_source
  <where>
    <trim suffixOverrides=",">
    <if test="record.userId != null">
      user_id = #{record.userId,jdbcType=VARCHAR},
    </if>
    <if test="record.title != null">
      title = #{record.title,jdbcType=VARCHAR},
    </if>
    <if test="record.type != null">
      `type` = #{record.type,jdbcType=VARCHAR},
    </if>
    <if test="record.sdecotation != null">
      sdecotation = #{record.sdecotation,jdbcType=VARCHAR},
    </if>
    <if test="record.sourceUrl != null">
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
    </if>
    <if test="record.createTime != null">
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
    </if>
    </trim>
  </where>
  </select>
</mapper>