<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.github.spring.base.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="org.github.spring.base.entity.ArticleEntity">
  <id column="id" jdbcType="INTEGER" property="id" />
  <result column="title" jdbcType="VARCHAR" property="title" />
  <result column="content" jdbcType="VARCHAR" property="content" />
  <result column="image" jdbcType="VARCHAR" property="image" />
  <result column="time" jdbcType="VARCHAR" property="time" />
  <result column="editer" jdbcType="VARCHAR" property="editer" />
  <result column="count" jdbcType="INTEGER" property="count" />
  <result column="count1" jdbcType="INTEGER" property="count1" />
  <result column="type" jdbcType="VARCHAR" property="type" />
  <result column="notice" jdbcType="VARCHAR" property="notice" />
  <result column="keywords" jdbcType="VARCHAR" property="keywords" />
  </resultMap>
  <sql id="Example_Where_Clause">
  <where>
    <foreach collection="oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
  <where>
    <foreach collection="example.oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Base_Column_List">
  id, title, content, image, `time`, editer, `count`, count1, `type`, notice, keywords
  </sql>
  <select id="selectByExample" parameterType="org.github.spring.base.example.ArticleExample" resultMap="BaseResultMap">
  select
  <if test="distinct">
    distinct
  </if>
  <include refid="Base_Column_List" />
  from sampledb.article
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null">
    order by ${orderByClause}
  </if>
  </select>
  <delete id="deleteByExample" parameterType="org.github.spring.base.example.ArticleExample">
  delete from sampledb.article
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </delete>
  <insert id="insertSelective" parameterType="org.github.spring.base.entity.ArticleEntity">
  insert into sampledb.article
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="id != null">
    id,
    </if>
    <if test="title != null">
    title,
    </if>
    <if test="content != null">
    content,
    </if>
    <if test="image != null">
    image,
    </if>
    <if test="time != null">
    `time`,
    </if>
    <if test="editer != null">
    editer,
    </if>
    <if test="count != null">
    `count`,
    </if>
    <if test="count1 != null">
    count1,
    </if>
    <if test="type != null">
    `type`,
    </if>
    <if test="notice != null">
    notice,
    </if>
    <if test="keywords != null">
    keywords,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="id != null">
    #{id,jdbcType=INTEGER},
    </if>
    <if test="title != null">
    #{title,jdbcType=VARCHAR},
    </if>
    <if test="content != null">
    #{content,jdbcType=VARCHAR},
    </if>
    <if test="image != null">
    #{image,jdbcType=VARCHAR},
    </if>
    <if test="time != null">
    #{time,jdbcType=VARCHAR},
    </if>
    <if test="editer != null">
    #{editer,jdbcType=VARCHAR},
    </if>
    <if test="count != null">
    #{count,jdbcType=INTEGER},
    </if>
    <if test="count1 != null">
    #{count1,jdbcType=INTEGER},
    </if>
    <if test="type != null">
    #{type,jdbcType=VARCHAR},
    </if>
    <if test="notice != null">
    #{notice,jdbcType=VARCHAR},
    </if>
    <if test="keywords != null">
    #{keywords,jdbcType=VARCHAR},
    </if>
  </trim>
  </insert>
  <select id="countByExample" parameterType="org.github.spring.base.example.ArticleExample" resultType="java.lang.Long">
  select count(*) from sampledb.article
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
  update sampledb.article
  <set>
    <if test="record.id != null">
    id = #{record.id,jdbcType=INTEGER},
    </if>
    <if test="record.title != null">
    title = #{record.title,jdbcType=VARCHAR},
    </if>
    <if test="record.content != null">
    content = #{record.content,jdbcType=VARCHAR},
    </if>
    <if test="record.image != null">
    image = #{record.image,jdbcType=VARCHAR},
    </if>
    <if test="record.time != null">
    `time` = #{record.time,jdbcType=VARCHAR},
    </if>
    <if test="record.editer != null">
    editer = #{record.editer,jdbcType=VARCHAR},
    </if>
    <if test="record.count != null">
    `count` = #{record.count,jdbcType=INTEGER},
    </if>
    <if test="record.count1 != null">
    count1 = #{record.count1,jdbcType=INTEGER},
    </if>
    <if test="record.type != null">
    `type` = #{record.type,jdbcType=VARCHAR},
    </if>
    <if test="record.notice != null">
    notice = #{record.notice,jdbcType=VARCHAR},
    </if>
    <if test="record.keywords != null">
    keywords = #{record.keywords,jdbcType=VARCHAR},
    </if>
  </set>
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByExample" parameterType="map">
  update sampledb.article
  set id = #{record.id,jdbcType=INTEGER},
    title = #{record.title,jdbcType=VARCHAR},
    content = #{record.content,jdbcType=VARCHAR},
    image = #{record.image,jdbcType=VARCHAR},
    `time` = #{record.time,jdbcType=VARCHAR},
    editer = #{record.editer,jdbcType=VARCHAR},
    `count` = #{record.count,jdbcType=INTEGER},
    count1 = #{record.count1,jdbcType=INTEGER},
    `type` = #{record.type,jdbcType=VARCHAR},
    notice = #{record.notice,jdbcType=VARCHAR},
    keywords = #{record.keywords,jdbcType=VARCHAR}
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.github.spring.base.entity.ArticleEntity">
  update sampledb.article
  <set>
    <if test="title != null">
    title = #{title,jdbcType=VARCHAR},
    </if>
    <if test="content != null">
    content = #{content,jdbcType=VARCHAR},
    </if>
    <if test="image != null">
    image = #{image,jdbcType=VARCHAR},
    </if>
    <if test="time != null">
    `time` = #{time,jdbcType=VARCHAR},
    </if>
    <if test="editer != null">
    editer = #{editer,jdbcType=VARCHAR},
    </if>
    <if test="count != null">
    `count` = #{count,jdbcType=INTEGER},
    </if>
    <if test="count1 != null">
    count1 = #{count1,jdbcType=INTEGER},
    </if>
    <if test="type != null">
    `type` = #{type,jdbcType=VARCHAR},
    </if>
    <if test="notice != null">
    notice = #{notice,jdbcType=VARCHAR},
    </if>
    <if test="keywords != null">
    keywords = #{keywords,jdbcType=VARCHAR},
    </if>
  </set>
  where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    insert into sampledb.article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      title,
      content,
      image,
      `time`,
      editer,
      `count`,
      count1,
      `type`,
      notice,
      keywords,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
      #{item.id,jdbcType=INTEGER},
      #{item.title,jdbcType=VARCHAR},
      #{item.content,jdbcType=VARCHAR},
      #{item.image,jdbcType=VARCHAR},
      #{item.time,jdbcType=VARCHAR},
      #{item.editer,jdbcType=VARCHAR},
      #{item.count,jdbcType=INTEGER},
      #{item.count1,jdbcType=INTEGER},
      #{item.type,jdbcType=VARCHAR},
      #{item.notice,jdbcType=VARCHAR},
      #{item.keywords,jdbcType=VARCHAR},
      </trim>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </insert>
  <update id="batchUpdate" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    <foreach collection="list" index="index" item="item" separator=";">
       update sampledb.article
      <set>
      <trim suffixOverrides=",">
        <if test="item.title != null">
        title = #{item.title,jdbcType=VARCHAR},
        </if>
        <if test="item.content != null">
        content = #{item.content,jdbcType=VARCHAR},
        </if>
        <if test="item.image != null">
        image = #{item.image,jdbcType=VARCHAR},
        </if>
        <if test="item.time != null">
        `time` = #{item.time,jdbcType=VARCHAR},
        </if>
        <if test="item.editer != null">
        editer = #{item.editer,jdbcType=VARCHAR},
        </if>
        <if test="item.count != null">
        `count` = #{item.count,jdbcType=INTEGER},
        </if>
        <if test="item.count1 != null">
        count1 = #{item.count1,jdbcType=INTEGER},
        </if>
        <if test="item.type != null">
        `type` = #{item.type,jdbcType=VARCHAR},
        </if>
        <if test="item.notice != null">
        notice = #{item.notice,jdbcType=VARCHAR},
        </if>
        <if test="item.keywords != null">
        keywords = #{item.keywords,jdbcType=VARCHAR},
        </if>
      </trim>
      </set>
      <where>
      <trim suffixOverrides=",">
        id = #{item.id,jdbcType=INTEGER},
      </trim>
      </where>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </update>
  <sql id="Identifiers_Array_Conditions">
  <foreach collection="array" index="index" item="item" separator=" and ">
    <if test="item == 'id'">
    id = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="item == 'title'">
    title = #{record.title,jdbcType=VARCHAR}
    </if>
    <if test="item == 'content'">
    content = #{record.content,jdbcType=VARCHAR}
    </if>
    <if test="item == 'image'">
    image = #{record.image,jdbcType=VARCHAR}
    </if>
    <if test="item == 'time'">
    `time` = #{record.time,jdbcType=VARCHAR}
    </if>
    <if test="item == 'editer'">
    editer = #{record.editer,jdbcType=VARCHAR}
    </if>
    <if test="item == 'count'">
    `count` = #{record.count,jdbcType=INTEGER}
    </if>
    <if test="item == 'count1'">
    count1 = #{record.count1,jdbcType=INTEGER}
    </if>
    <if test="item == 'type'">
    `type` = #{record.type,jdbcType=VARCHAR}
    </if>
    <if test="item == 'notice'">
    notice = #{record.notice,jdbcType=VARCHAR}
    </if>
    <if test="item == 'keywords'">
    keywords = #{record.keywords,jdbcType=VARCHAR}
    </if>
  </foreach>
  </sql>
  <update id="upsert" parameterType="map">
  insert into sampledb.article
  <trim prefix="(" suffix=")" suffixOverrides=",">
    id,
    title,
    content,
    image,
    `time`,
    editer,
    `count`,
    count1,
    `type`,
    notice,
    keywords,
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    #{record.id,jdbcType=INTEGER},
    #{record.title,jdbcType=VARCHAR},
    #{record.content,jdbcType=VARCHAR},
    #{record.image,jdbcType=VARCHAR},
    #{record.time,jdbcType=VARCHAR},
    #{record.editer,jdbcType=VARCHAR},
    #{record.count,jdbcType=INTEGER},
    #{record.count1,jdbcType=INTEGER},
    #{record.type,jdbcType=VARCHAR},
    #{record.notice,jdbcType=VARCHAR},
    #{record.keywords,jdbcType=VARCHAR},
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    id = #{record.id,jdbcType=INTEGER},
    title = #{record.title,jdbcType=VARCHAR},
    content = #{record.content,jdbcType=VARCHAR},
    image = #{record.image,jdbcType=VARCHAR},
    `time` = #{record.time,jdbcType=VARCHAR},
    editer = #{record.editer,jdbcType=VARCHAR},
    `count` = #{record.count,jdbcType=INTEGER},
    count1 = #{record.count1,jdbcType=INTEGER},
    `type` = #{record.type,jdbcType=VARCHAR},
    notice = #{record.notice,jdbcType=VARCHAR},
    keywords = #{record.keywords,jdbcType=VARCHAR},
  </trim>
  </update>
  <update id="upsertSelective" parameterType="map">
  insert into sampledb.article
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.id != null">
    id,
    </if>
    <if test="record.title != null">
    title,
    </if>
    <if test="record.content != null">
    content,
    </if>
    <if test="record.image != null">
    image,
    </if>
    <if test="record.time != null">
    `time`,
    </if>
    <if test="record.editer != null">
    editer,
    </if>
    <if test="record.count != null">
    `count`,
    </if>
    <if test="record.count1 != null">
    count1,
    </if>
    <if test="record.type != null">
    `type`,
    </if>
    <if test="record.notice != null">
    notice,
    </if>
    <if test="record.keywords != null">
    keywords,
    </if>
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.id != null">
    #{record.id,jdbcType=INTEGER},
    </if>
    <if test="record.title != null">
    #{record.title,jdbcType=VARCHAR},
    </if>
    <if test="record.content != null">
    #{record.content,jdbcType=VARCHAR},
    </if>
    <if test="record.image != null">
    #{record.image,jdbcType=VARCHAR},
    </if>
    <if test="record.time != null">
    #{record.time,jdbcType=VARCHAR},
    </if>
    <if test="record.editer != null">
    #{record.editer,jdbcType=VARCHAR},
    </if>
    <if test="record.count != null">
    #{record.count,jdbcType=INTEGER},
    </if>
    <if test="record.count1 != null">
    #{record.count1,jdbcType=INTEGER},
    </if>
    <if test="record.type != null">
    #{record.type,jdbcType=VARCHAR},
    </if>
    <if test="record.notice != null">
    #{record.notice,jdbcType=VARCHAR},
    </if>
    <if test="record.keywords != null">
    #{record.keywords,jdbcType=VARCHAR},
    </if>
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    <if test="record.id != null">
    id = #{record.id,jdbcType=INTEGER},
    </if>
    <if test="record.title != null">
    title = #{record.title,jdbcType=VARCHAR},
    </if>
    <if test="record.content != null">
    content = #{record.content,jdbcType=VARCHAR},
    </if>
    <if test="record.image != null">
    image = #{record.image,jdbcType=VARCHAR},
    </if>
    <if test="record.time != null">
    `time` = #{record.time,jdbcType=VARCHAR},
    </if>
    <if test="record.editer != null">
    editer = #{record.editer,jdbcType=VARCHAR},
    </if>
    <if test="record.count != null">
    `count` = #{record.count,jdbcType=INTEGER},
    </if>
    <if test="record.count1 != null">
    count1 = #{record.count1,jdbcType=INTEGER},
    </if>
    <if test="record.type != null">
    `type` = #{record.type,jdbcType=VARCHAR},
    </if>
    <if test="record.notice != null">
    notice = #{record.notice,jdbcType=VARCHAR},
    </if>
    <if test="record.keywords != null">
    keywords = #{record.keywords,jdbcType=VARCHAR},
    </if>
  </trim>
  </update>
  <select id="selectByUniqueKey" parameterType="org.github.spring.base.entity.ArticleEntity" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from sampledb.article
  <where>
    <trim suffixOverrides=",">
    <if test="record.title != null">
      title = #{record.title,jdbcType=VARCHAR},
    </if>
    <if test="record.content != null">
      content = #{record.content,jdbcType=VARCHAR},
    </if>
    <if test="record.image != null">
      image = #{record.image,jdbcType=VARCHAR},
    </if>
    <if test="record.time != null">
      `time` = #{record.time,jdbcType=VARCHAR},
    </if>
    <if test="record.editer != null">
      editer = #{record.editer,jdbcType=VARCHAR},
    </if>
    <if test="record.count != null">
      `count` = #{record.count,jdbcType=INTEGER},
    </if>
    <if test="record.count1 != null">
      count1 = #{record.count1,jdbcType=INTEGER},
    </if>
    <if test="record.type != null">
      `type` = #{record.type,jdbcType=VARCHAR},
    </if>
    <if test="record.notice != null">
      notice = #{record.notice,jdbcType=VARCHAR},
    </if>
    <if test="record.keywords != null">
      keywords = #{record.keywords,jdbcType=VARCHAR},
    </if>
    </trim>
  </where>
  </select>
</mapper>