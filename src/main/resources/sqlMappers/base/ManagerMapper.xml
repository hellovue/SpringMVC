<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.github.spring.base.mapper.ManagerMapper">
  <resultMap id="BaseResultMap" type="org.github.spring.base.entity.ManagerEntity">
  <id column="id" jdbcType="INTEGER" property="id" />
  <result column="account" jdbcType="VARCHAR" property="account" />
  <result column="password" jdbcType="VARCHAR" property="password" />
  <result column="role" jdbcType="VARCHAR" property="role" />
  <result column="notice" jdbcType="VARCHAR" property="notice" />
  </resultMap>
  <sql id="Example_Where_Clause">
  <where>
    <foreach collection="oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
  <where>
    <foreach collection="example.oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Base_Column_List">
  id, account, `password`, `role`, notice
  </sql>
  <select id="selectByExample" parameterType="org.github.spring.base.example.ManagerExample" resultMap="BaseResultMap">
  select
  <if test="distinct">
    distinct
  </if>
  <include refid="Base_Column_List" />
  from sampledb.manager
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null">
    order by ${orderByClause}
  </if>
  </select>
  <delete id="deleteByExample" parameterType="org.github.spring.base.example.ManagerExample">
  delete from sampledb.manager
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </delete>
  <insert id="insertSelective" parameterType="org.github.spring.base.entity.ManagerEntity">
  insert into sampledb.manager
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="id != null">
    id,
    </if>
    <if test="account != null">
    account,
    </if>
    <if test="password != null">
    `password`,
    </if>
    <if test="role != null">
    `role`,
    </if>
    <if test="notice != null">
    notice,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="id != null">
    #{id,jdbcType=INTEGER},
    </if>
    <if test="account != null">
    #{account,jdbcType=VARCHAR},
    </if>
    <if test="password != null">
    #{password,jdbcType=VARCHAR},
    </if>
    <if test="role != null">
    #{role,jdbcType=VARCHAR},
    </if>
    <if test="notice != null">
    #{notice,jdbcType=VARCHAR},
    </if>
  </trim>
  </insert>
  <select id="countByExample" parameterType="org.github.spring.base.example.ManagerExample" resultType="java.lang.Long">
  select count(*) from sampledb.manager
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
  update sampledb.manager
  <set>
    <if test="record.id != null">
    id = #{record.id,jdbcType=INTEGER},
    </if>
    <if test="record.account != null">
    account = #{record.account,jdbcType=VARCHAR},
    </if>
    <if test="record.password != null">
    `password` = #{record.password,jdbcType=VARCHAR},
    </if>
    <if test="record.role != null">
    `role` = #{record.role,jdbcType=VARCHAR},
    </if>
    <if test="record.notice != null">
    notice = #{record.notice,jdbcType=VARCHAR},
    </if>
  </set>
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByExample" parameterType="map">
  update sampledb.manager
  set id = #{record.id,jdbcType=INTEGER},
    account = #{record.account,jdbcType=VARCHAR},
    `password` = #{record.password,jdbcType=VARCHAR},
    `role` = #{record.role,jdbcType=VARCHAR},
    notice = #{record.notice,jdbcType=VARCHAR}
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.github.spring.base.entity.ManagerEntity">
  update sampledb.manager
  <set>
    <if test="account != null">
    account = #{account,jdbcType=VARCHAR},
    </if>
    <if test="password != null">
    `password` = #{password,jdbcType=VARCHAR},
    </if>
    <if test="role != null">
    `role` = #{role,jdbcType=VARCHAR},
    </if>
    <if test="notice != null">
    notice = #{notice,jdbcType=VARCHAR},
    </if>
  </set>
  where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    insert into sampledb.manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      account,
      `password`,
      `role`,
      notice,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
      #{item.id,jdbcType=INTEGER},
      #{item.account,jdbcType=VARCHAR},
      #{item.password,jdbcType=VARCHAR},
      #{item.role,jdbcType=VARCHAR},
      #{item.notice,jdbcType=VARCHAR},
      </trim>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </insert>
  <update id="batchUpdate" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    <foreach collection="list" index="index" item="item" separator=";">
       update sampledb.manager
      <set>
      <trim suffixOverrides=",">
        <if test="item.account != null">
        account = #{item.account,jdbcType=VARCHAR},
        </if>
        <if test="item.password != null">
        `password` = #{item.password,jdbcType=VARCHAR},
        </if>
        <if test="item.role != null">
        `role` = #{item.role,jdbcType=VARCHAR},
        </if>
        <if test="item.notice != null">
        notice = #{item.notice,jdbcType=VARCHAR},
        </if>
      </trim>
      </set>
      <where>
      <trim suffixOverrides=",">
        id = #{item.id,jdbcType=INTEGER},
      </trim>
      </where>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </update>
  <sql id="Identifiers_Array_Conditions">
  <foreach collection="array" index="index" item="item" separator=" and ">
    <if test="item == 'id'">
    id = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="item == 'account'">
    account = #{record.account,jdbcType=VARCHAR}
    </if>
    <if test="item == 'password'">
    `password` = #{record.password,jdbcType=VARCHAR}
    </if>
    <if test="item == 'role'">
    `role` = #{record.role,jdbcType=VARCHAR}
    </if>
    <if test="item == 'notice'">
    notice = #{record.notice,jdbcType=VARCHAR}
    </if>
  </foreach>
  </sql>
  <update id="upsert" parameterType="map">
  insert into sampledb.manager
  <trim prefix="(" suffix=")" suffixOverrides=",">
    id,
    account,
    `password`,
    `role`,
    notice,
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    #{record.id,jdbcType=INTEGER},
    #{record.account,jdbcType=VARCHAR},
    #{record.password,jdbcType=VARCHAR},
    #{record.role,jdbcType=VARCHAR},
    #{record.notice,jdbcType=VARCHAR},
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    id = #{record.id,jdbcType=INTEGER},
    account = #{record.account,jdbcType=VARCHAR},
    `password` = #{record.password,jdbcType=VARCHAR},
    `role` = #{record.role,jdbcType=VARCHAR},
    notice = #{record.notice,jdbcType=VARCHAR},
  </trim>
  </update>
  <update id="upsertSelective" parameterType="map">
  insert into sampledb.manager
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.id != null">
    id,
    </if>
    <if test="record.account != null">
    account,
    </if>
    <if test="record.password != null">
    `password`,
    </if>
    <if test="record.role != null">
    `role`,
    </if>
    <if test="record.notice != null">
    notice,
    </if>
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.id != null">
    #{record.id,jdbcType=INTEGER},
    </if>
    <if test="record.account != null">
    #{record.account,jdbcType=VARCHAR},
    </if>
    <if test="record.password != null">
    #{record.password,jdbcType=VARCHAR},
    </if>
    <if test="record.role != null">
    #{record.role,jdbcType=VARCHAR},
    </if>
    <if test="record.notice != null">
    #{record.notice,jdbcType=VARCHAR},
    </if>
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    <if test="record.id != null">
    id = #{record.id,jdbcType=INTEGER},
    </if>
    <if test="record.account != null">
    account = #{record.account,jdbcType=VARCHAR},
    </if>
    <if test="record.password != null">
    `password` = #{record.password,jdbcType=VARCHAR},
    </if>
    <if test="record.role != null">
    `role` = #{record.role,jdbcType=VARCHAR},
    </if>
    <if test="record.notice != null">
    notice = #{record.notice,jdbcType=VARCHAR},
    </if>
  </trim>
  </update>
  <select id="selectByUniqueKey" parameterType="org.github.spring.base.entity.ManagerEntity" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from sampledb.manager
  <where>
    <trim suffixOverrides=",">
    <if test="record.account != null">
      account = #{record.account,jdbcType=VARCHAR},
    </if>
    <if test="record.password != null">
      `password` = #{record.password,jdbcType=VARCHAR},
    </if>
    <if test="record.role != null">
      `role` = #{record.role,jdbcType=VARCHAR},
    </if>
    <if test="record.notice != null">
      notice = #{record.notice,jdbcType=VARCHAR},
    </if>
    </trim>
  </where>
  </select>
</mapper>