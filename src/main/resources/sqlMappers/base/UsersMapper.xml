<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.github.spring.base.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="org.github.spring.base.entity.UsersEntity">
  <id column="user_id" jdbcType="VARCHAR" property="userId" />
  <result column="username" jdbcType="VARCHAR" property="username" />
  <result column="password" jdbcType="VARCHAR" property="password" />
  <result column="question" jdbcType="VARCHAR" property="question" />
  <result column="answer" jdbcType="VARCHAR" property="answer" />
  <result column="user_img" jdbcType="VARCHAR" property="userImg" />
  <result column="regtime" jdbcType="TIMESTAMP" property="regtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
  <where>
    <foreach collection="oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
  <where>
    <foreach collection="example.oredCriteria" item="criteria" separator="or">
    <if test="criteria.valid">
      <trim prefix="(" prefixOverrides="and" suffix=")">
      <foreach collection="criteria.criteria" item="criterion">
        <choose>
        <when test="criterion.noValue">
          and ${criterion.condition}
        </when>
        <when test="criterion.singleValue">
          and ${criterion.condition} #{criterion.value}
        </when>
        <when test="criterion.betweenValue">
          and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
        </when>
        <when test="criterion.listValue">
          and ${criterion.condition}
          <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
          #{listItem}
          </foreach>
        </when>
        </choose>
      </foreach>
      </trim>
    </if>
    </foreach>
  </where>
  </sql>
  <sql id="Base_Column_List">
  user_id, username, `password`, question, answer, user_img, regtime
  </sql>
  <select id="selectByExample" parameterType="org.github.spring.base.example.UsersExample" resultMap="BaseResultMap">
  select
  <if test="distinct">
    distinct
  </if>
  <include refid="Base_Column_List" />
  from sampledb.t_users
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null">
    order by ${orderByClause}
  </if>
  </select>
  <delete id="deleteByExample" parameterType="org.github.spring.base.example.UsersExample">
  delete from sampledb.t_users
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </delete>
  <insert id="insertSelective" parameterType="org.github.spring.base.entity.UsersEntity">
  insert into sampledb.t_users
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="userId != null">
    user_id,
    </if>
    <if test="username != null">
    username,
    </if>
    <if test="password != null">
    `password`,
    </if>
    <if test="question != null">
    question,
    </if>
    <if test="answer != null">
    answer,
    </if>
    <if test="userImg != null">
    user_img,
    </if>
    <if test="regtime != null">
    regtime,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="userId != null">
    #{userId,jdbcType=VARCHAR},
    </if>
    <if test="username != null">
    #{username,jdbcType=VARCHAR},
    </if>
    <if test="password != null">
    #{password,jdbcType=VARCHAR},
    </if>
    <if test="question != null">
    #{question,jdbcType=VARCHAR},
    </if>
    <if test="answer != null">
    #{answer,jdbcType=VARCHAR},
    </if>
    <if test="userImg != null">
    #{userImg,jdbcType=VARCHAR},
    </if>
    <if test="regtime != null">
    #{regtime,jdbcType=TIMESTAMP},
    </if>
  </trim>
  </insert>
  <select id="countByExample" parameterType="org.github.spring.base.example.UsersExample" resultType="java.lang.Long">
  select count(*) from sampledb.t_users
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
  update sampledb.t_users
  <set>
    <if test="record.userId != null">
    user_id = #{record.userId,jdbcType=VARCHAR},
    </if>
    <if test="record.username != null">
    username = #{record.username,jdbcType=VARCHAR},
    </if>
    <if test="record.password != null">
    `password` = #{record.password,jdbcType=VARCHAR},
    </if>
    <if test="record.question != null">
    question = #{record.question,jdbcType=VARCHAR},
    </if>
    <if test="record.answer != null">
    answer = #{record.answer,jdbcType=VARCHAR},
    </if>
    <if test="record.userImg != null">
    user_img = #{record.userImg,jdbcType=VARCHAR},
    </if>
    <if test="record.regtime != null">
    regtime = #{record.regtime,jdbcType=TIMESTAMP},
    </if>
  </set>
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByExample" parameterType="map">
  update sampledb.t_users
  set user_id = #{record.userId,jdbcType=VARCHAR},
    username = #{record.username,jdbcType=VARCHAR},
    `password` = #{record.password,jdbcType=VARCHAR},
    question = #{record.question,jdbcType=VARCHAR},
    answer = #{record.answer,jdbcType=VARCHAR},
    user_img = #{record.userImg,jdbcType=VARCHAR},
    regtime = #{record.regtime,jdbcType=TIMESTAMP}
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.github.spring.base.entity.UsersEntity">
  update sampledb.t_users
  <set>
    <if test="username != null">
    username = #{username,jdbcType=VARCHAR},
    </if>
    <if test="password != null">
    `password` = #{password,jdbcType=VARCHAR},
    </if>
    <if test="question != null">
    question = #{question,jdbcType=VARCHAR},
    </if>
    <if test="answer != null">
    answer = #{answer,jdbcType=VARCHAR},
    </if>
    <if test="userImg != null">
    user_img = #{userImg,jdbcType=VARCHAR},
    </if>
    <if test="regtime != null">
    regtime = #{regtime,jdbcType=TIMESTAMP},
    </if>
  </set>
  where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    insert into sampledb.t_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      user_id,
      username,
      `password`,
      question,
      answer,
      user_img,
      regtime,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
      #{item.userId,jdbcType=VARCHAR},
      #{item.username,jdbcType=VARCHAR},
      #{item.password,jdbcType=VARCHAR},
      #{item.question,jdbcType=VARCHAR},
      #{item.answer,jdbcType=VARCHAR},
      #{item.userImg,jdbcType=VARCHAR},
      #{item.regtime,jdbcType=TIMESTAMP},
      </trim>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </insert>
  <update id="batchUpdate" parameterType="list">
  <choose>
    <when test="list != null and list.size != 0">
    <foreach collection="list" index="index" item="item" separator=";">
       update sampledb.t_users
      <set>
      <trim suffixOverrides=",">
        <if test="item.username != null">
        username = #{item.username,jdbcType=VARCHAR},
        </if>
        <if test="item.password != null">
        `password` = #{item.password,jdbcType=VARCHAR},
        </if>
        <if test="item.question != null">
        question = #{item.question,jdbcType=VARCHAR},
        </if>
        <if test="item.answer != null">
        answer = #{item.answer,jdbcType=VARCHAR},
        </if>
        <if test="item.userImg != null">
        user_img = #{item.userImg,jdbcType=VARCHAR},
        </if>
        <if test="item.regtime != null">
        regtime = #{item.regtime,jdbcType=TIMESTAMP},
        </if>
      </trim>
      </set>
      <where>
      <trim suffixOverrides=",">
        user_id = #{item.userId,jdbcType=VARCHAR},
      </trim>
      </where>
    </foreach>
    </when>
    <otherwise>
    SELECT 0
    </otherwise>
  </choose>
  </update>
  <sql id="Identifiers_Array_Conditions">
  <foreach collection="array" index="index" item="item" separator=" and ">
    <if test="item == 'userId'">
    user_id = #{record.userId,jdbcType=VARCHAR}
    </if>
    <if test="item == 'username'">
    username = #{record.username,jdbcType=VARCHAR}
    </if>
    <if test="item == 'password'">
    `password` = #{record.password,jdbcType=VARCHAR}
    </if>
    <if test="item == 'question'">
    question = #{record.question,jdbcType=VARCHAR}
    </if>
    <if test="item == 'answer'">
    answer = #{record.answer,jdbcType=VARCHAR}
    </if>
    <if test="item == 'userImg'">
    user_img = #{record.userImg,jdbcType=VARCHAR}
    </if>
    <if test="item == 'regtime'">
    regtime = #{record.regtime,jdbcType=TIMESTAMP}
    </if>
  </foreach>
  </sql>
  <update id="upsert" parameterType="map">
  insert into sampledb.t_users
  <trim prefix="(" suffix=")" suffixOverrides=",">
    user_id,
    username,
    `password`,
    question,
    answer,
    user_img,
    regtime,
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    #{record.userId,jdbcType=VARCHAR},
    #{record.username,jdbcType=VARCHAR},
    #{record.password,jdbcType=VARCHAR},
    #{record.question,jdbcType=VARCHAR},
    #{record.answer,jdbcType=VARCHAR},
    #{record.userImg,jdbcType=VARCHAR},
    #{record.regtime,jdbcType=TIMESTAMP},
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    user_id = #{record.userId,jdbcType=VARCHAR},
    username = #{record.username,jdbcType=VARCHAR},
    `password` = #{record.password,jdbcType=VARCHAR},
    question = #{record.question,jdbcType=VARCHAR},
    answer = #{record.answer,jdbcType=VARCHAR},
    user_img = #{record.userImg,jdbcType=VARCHAR},
    regtime = #{record.regtime,jdbcType=TIMESTAMP},
  </trim>
  </update>
  <update id="upsertSelective" parameterType="map">
  insert into sampledb.t_users
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.userId != null">
    user_id,
    </if>
    <if test="record.username != null">
    username,
    </if>
    <if test="record.password != null">
    `password`,
    </if>
    <if test="record.question != null">
    question,
    </if>
    <if test="record.answer != null">
    answer,
    </if>
    <if test="record.userImg != null">
    user_img,
    </if>
    <if test="record.regtime != null">
    regtime,
    </if>
  </trim>
  values 
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="record.userId != null">
    #{record.userId,jdbcType=VARCHAR},
    </if>
    <if test="record.username != null">
    #{record.username,jdbcType=VARCHAR},
    </if>
    <if test="record.password != null">
    #{record.password,jdbcType=VARCHAR},
    </if>
    <if test="record.question != null">
    #{record.question,jdbcType=VARCHAR},
    </if>
    <if test="record.answer != null">
    #{record.answer,jdbcType=VARCHAR},
    </if>
    <if test="record.userImg != null">
    #{record.userImg,jdbcType=VARCHAR},
    </if>
    <if test="record.regtime != null">
    #{record.regtime,jdbcType=TIMESTAMP},
    </if>
  </trim>
  on duplicate key update 
  <trim suffixOverrides=",">
    <if test="record.userId != null">
    user_id = #{record.userId,jdbcType=VARCHAR},
    </if>
    <if test="record.username != null">
    username = #{record.username,jdbcType=VARCHAR},
    </if>
    <if test="record.password != null">
    `password` = #{record.password,jdbcType=VARCHAR},
    </if>
    <if test="record.question != null">
    question = #{record.question,jdbcType=VARCHAR},
    </if>
    <if test="record.answer != null">
    answer = #{record.answer,jdbcType=VARCHAR},
    </if>
    <if test="record.userImg != null">
    user_img = #{record.userImg,jdbcType=VARCHAR},
    </if>
    <if test="record.regtime != null">
    regtime = #{record.regtime,jdbcType=TIMESTAMP},
    </if>
  </trim>
  </update>
  <select id="selectByUniqueKey" parameterType="org.github.spring.base.entity.UsersEntity" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from sampledb.t_users
  <where>
    <trim suffixOverrides=",">
    <if test="record.username != null">
      username = #{record.username,jdbcType=VARCHAR},
    </if>
    <if test="record.password != null">
      `password` = #{record.password,jdbcType=VARCHAR},
    </if>
    <if test="record.question != null">
      question = #{record.question,jdbcType=VARCHAR},
    </if>
    <if test="record.answer != null">
      answer = #{record.answer,jdbcType=VARCHAR},
    </if>
    <if test="record.userImg != null">
      user_img = #{record.userImg,jdbcType=VARCHAR},
    </if>
    <if test="record.regtime != null">
      regtime = #{record.regtime,jdbcType=TIMESTAMP},
    </if>
    </trim>
  </where>
  </select>
</mapper>