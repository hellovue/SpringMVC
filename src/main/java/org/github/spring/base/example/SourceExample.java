//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SourceExample {
  protected String orderByClause;

  protected boolean distinct;

  protected List<Criteria> oredCriteria;

  public SourceExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  public String getOrderByClause() {
    return orderByClause;
  }

  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  public boolean isDistinct() {
    return distinct;
  }

  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria(this);
    return criteria;
  }

  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andSourceIdIsNull() {
      addCriterion("source_id is null");
      return (Criteria) this;
    }

    public Criteria andSourceIdIsNotNull() {
      addCriterion("source_id is not null");
      return (Criteria) this;
    }

    public Criteria andSourceIdEqualTo(String value) {
      if(value != null) addCriterion("source_id =", value, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdNotEqualTo(String value) {
      if(value != null) addCriterion("source_id <>", value, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdGreaterThan(String value) {
      if(value != null) addCriterion("source_id >", value, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("source_id >=", value, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdLessThan(String value) {
      if(value != null) addCriterion("source_id <", value, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("source_id <=", value, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdLike(String value) {
      if(value != null) addCriterion("source_id like", value, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdNotLike(String value) {
      if(value != null) addCriterion("source_id not like", value, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("source_id in", values, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("source_id not in", values, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("source_id between", head, tail, "sourceId");
      return (Criteria) this;
    }

    public Criteria andSourceIdNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("source_id not between", head, tail, "sourceId");
      return (Criteria) this;
    }

    public Criteria andUserIdIsNull() {
      addCriterion("user_id is null");
      return (Criteria) this;
    }

    public Criteria andUserIdIsNotNull() {
      addCriterion("user_id is not null");
      return (Criteria) this;
    }

    public Criteria andUserIdEqualTo(String value) {
      if(value != null) addCriterion("user_id =", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotEqualTo(String value) {
      if(value != null) addCriterion("user_id <>", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdGreaterThan(String value) {
      if(value != null) addCriterion("user_id >", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("user_id >=", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdLessThan(String value) {
      if(value != null) addCriterion("user_id <", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("user_id <=", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdLike(String value) {
      if(value != null) addCriterion("user_id like", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotLike(String value) {
      if(value != null) addCriterion("user_id not like", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("user_id in", values, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("user_id not in", values, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("user_id between", head, tail, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("user_id not between", head, tail, "userId");
      return (Criteria) this;
    }

    public Criteria andTitleIsNull() {
      addCriterion("title is null");
      return (Criteria) this;
    }

    public Criteria andTitleIsNotNull() {
      addCriterion("title is not null");
      return (Criteria) this;
    }

    public Criteria andTitleEqualTo(String value) {
      if(value != null) addCriterion("title =", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleNotEqualTo(String value) {
      if(value != null) addCriterion("title <>", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleGreaterThan(String value) {
      if(value != null) addCriterion("title >", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("title >=", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleLessThan(String value) {
      if(value != null) addCriterion("title <", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("title <=", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleLike(String value) {
      if(value != null) addCriterion("title like", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleNotLike(String value) {
      if(value != null) addCriterion("title not like", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("title in", values, "title");
      return (Criteria) this;
    }

    public Criteria andTitleNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("title not in", values, "title");
      return (Criteria) this;
    }

    public Criteria andTitleBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("title between", head, tail, "title");
      return (Criteria) this;
    }

    public Criteria andTitleNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("title not between", head, tail, "title");
      return (Criteria) this;
    }

    public Criteria andTypeIsNull() {
      addCriterion("`flag` is null");
      return (Criteria) this;
    }

    public Criteria andTypeIsNotNull() {
      addCriterion("`flag` is not null");
      return (Criteria) this;
    }

    public Criteria andTypeEqualTo(String value) {
      if(value != null) addCriterion("`flag` =", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotEqualTo(String value) {
      if(value != null) addCriterion("`flag` <>", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeGreaterThan(String value) {
      if(value != null) addCriterion("`flag` >", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("`flag` >=", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeLessThan(String value) {
      if(value != null) addCriterion("`flag` <", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("`flag` <=", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeLike(String value) {
      if(value != null) addCriterion("`flag` like", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotLike(String value) {
      if(value != null) addCriterion("`flag` not like", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`flag` in", values, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`flag` not in", values, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`flag` between", head, tail, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`flag` not between", head, tail, "flag");
      return (Criteria) this;
    }

    public Criteria andSdecotationIsNull() {
      addCriterion("sdecotation is null");
      return (Criteria) this;
    }

    public Criteria andSdecotationIsNotNull() {
      addCriterion("sdecotation is not null");
      return (Criteria) this;
    }

    public Criteria andSdecotationEqualTo(String value) {
      if(value != null) addCriterion("sdecotation =", value, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationNotEqualTo(String value) {
      if(value != null) addCriterion("sdecotation <>", value, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationGreaterThan(String value) {
      if(value != null) addCriterion("sdecotation >", value, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("sdecotation >=", value, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationLessThan(String value) {
      if(value != null) addCriterion("sdecotation <", value, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("sdecotation <=", value, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationLike(String value) {
      if(value != null) addCriterion("sdecotation like", value, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationNotLike(String value) {
      if(value != null) addCriterion("sdecotation not like", value, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("sdecotation in", values, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("sdecotation not in", values, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("sdecotation between", head, tail, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSdecotationNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("sdecotation not between", head, tail, "sdecotation");
      return (Criteria) this;
    }

    public Criteria andSourceUrlIsNull() {
      addCriterion("source_url is null");
      return (Criteria) this;
    }

    public Criteria andSourceUrlIsNotNull() {
      addCriterion("source_url is not null");
      return (Criteria) this;
    }

    public Criteria andSourceUrlEqualTo(String value) {
      if(value != null) addCriterion("source_url =", value, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlNotEqualTo(String value) {
      if(value != null) addCriterion("source_url <>", value, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlGreaterThan(String value) {
      if(value != null) addCriterion("source_url >", value, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("source_url >=", value, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlLessThan(String value) {
      if(value != null) addCriterion("source_url <", value, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("source_url <=", value, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlLike(String value) {
      if(value != null) addCriterion("source_url like", value, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlNotLike(String value) {
      if(value != null) addCriterion("source_url not like", value, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("source_url in", values, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("source_url not in", values, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("source_url between", head, tail, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andSourceUrlNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("source_url not between", head, tail, "sourceUrl");
      return (Criteria) this;
    }

    public Criteria andCreateTimeIsNull() {
      addCriterion("create_time is null");
      return (Criteria) this;
    }

    public Criteria andCreateTimeIsNotNull() {
      addCriterion("create_time is not null");
      return (Criteria) this;
    }

    public Criteria andCreateTimeEqualTo(Date value) {
      if(value != null) addCriterion("create_time =", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeNotEqualTo(Date value) {
      if(value != null) addCriterion("create_time <>", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeGreaterThan(Date value) {
      if(value != null) addCriterion("create_time >", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
      if(value != null) addCriterion("create_time >=", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeLessThan(Date value) {
      if(value != null) addCriterion("create_time <", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
      if(value != null) addCriterion("create_time <=", value, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeIn(List<Date> values) {
      if (values != null && ! values.isEmpty()) addCriterion("create_time in", values, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeNotIn(List<Date> values) {
      if (values != null && ! values.isEmpty()) addCriterion("create_time not in", values, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeBetween(Date head, Date tail) {
      if(head != null && tail != null) addCriterion("create_time between", head, tail, "createTime");
      return (Criteria) this;
    }

    public Criteria andCreateTimeNotBetween(Date head, Date tail) {
      if(head != null && tail != null) addCriterion("create_time not between", head, tail, "createTime");
      return (Criteria) this;
    }
  }

  public static class Criteria extends GeneratedCriteria {
    private SourceExample example;

    protected Criteria(SourceExample example) {
      super();
      this.example = example;
    }

    public SourceExample example() {
      return this.example;
    }
  }

  public static class Criterion {
    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}