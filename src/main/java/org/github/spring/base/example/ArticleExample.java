//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.example;

import java.util.ArrayList;
import java.util.List;

public class ArticleExample {
  protected String orderByClause;

  protected boolean distinct;

  protected List<Criteria> oredCriteria;

  public ArticleExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  public String getOrderByClause() {
    return orderByClause;
  }

  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  public boolean isDistinct() {
    return distinct;
  }

  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria(this);
    return criteria;
  }

  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andIdIsNull() {
      addCriterion("id is null");
      return (Criteria) this;
    }

    public Criteria andIdIsNotNull() {
      addCriterion("id is not null");
      return (Criteria) this;
    }

    public Criteria andIdEqualTo(Integer value) {
      if(value != null) addCriterion("id =", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotEqualTo(Integer value) {
      if(value != null) addCriterion("id <>", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThan(Integer value) {
      if(value != null) addCriterion("id >", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("id >=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThan(Integer value) {
      if(value != null) addCriterion("id <", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("id <=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("id in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("id not in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("id between", head, tail, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("id not between", head, tail, "id");
      return (Criteria) this;
    }

    public Criteria andTitleIsNull() {
      addCriterion("title is null");
      return (Criteria) this;
    }

    public Criteria andTitleIsNotNull() {
      addCriterion("title is not null");
      return (Criteria) this;
    }

    public Criteria andTitleEqualTo(String value) {
      if(value != null) addCriterion("title =", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleNotEqualTo(String value) {
      if(value != null) addCriterion("title <>", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleGreaterThan(String value) {
      if(value != null) addCriterion("title >", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("title >=", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleLessThan(String value) {
      if(value != null) addCriterion("title <", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("title <=", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleLike(String value) {
      if(value != null) addCriterion("title like", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleNotLike(String value) {
      if(value != null) addCriterion("title not like", value, "title");
      return (Criteria) this;
    }

    public Criteria andTitleIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("title in", values, "title");
      return (Criteria) this;
    }

    public Criteria andTitleNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("title not in", values, "title");
      return (Criteria) this;
    }

    public Criteria andTitleBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("title between", head, tail, "title");
      return (Criteria) this;
    }

    public Criteria andTitleNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("title not between", head, tail, "title");
      return (Criteria) this;
    }

    public Criteria andContentIsNull() {
      addCriterion("content is null");
      return (Criteria) this;
    }

    public Criteria andContentIsNotNull() {
      addCriterion("content is not null");
      return (Criteria) this;
    }

    public Criteria andContentEqualTo(String value) {
      if(value != null) addCriterion("content =", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentNotEqualTo(String value) {
      if(value != null) addCriterion("content <>", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentGreaterThan(String value) {
      if(value != null) addCriterion("content >", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("content >=", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentLessThan(String value) {
      if(value != null) addCriterion("content <", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("content <=", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentLike(String value) {
      if(value != null) addCriterion("content like", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentNotLike(String value) {
      if(value != null) addCriterion("content not like", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("content in", values, "content");
      return (Criteria) this;
    }

    public Criteria andContentNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("content not in", values, "content");
      return (Criteria) this;
    }

    public Criteria andContentBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("content between", head, tail, "content");
      return (Criteria) this;
    }

    public Criteria andContentNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("content not between", head, tail, "content");
      return (Criteria) this;
    }

    public Criteria andImageIsNull() {
      addCriterion("image is null");
      return (Criteria) this;
    }

    public Criteria andImageIsNotNull() {
      addCriterion("image is not null");
      return (Criteria) this;
    }

    public Criteria andImageEqualTo(String value) {
      if(value != null) addCriterion("image =", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageNotEqualTo(String value) {
      if(value != null) addCriterion("image <>", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageGreaterThan(String value) {
      if(value != null) addCriterion("image >", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("image >=", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageLessThan(String value) {
      if(value != null) addCriterion("image <", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("image <=", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageLike(String value) {
      if(value != null) addCriterion("image like", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageNotLike(String value) {
      if(value != null) addCriterion("image not like", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("image in", values, "image");
      return (Criteria) this;
    }

    public Criteria andImageNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("image not in", values, "image");
      return (Criteria) this;
    }

    public Criteria andImageBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("image between", head, tail, "image");
      return (Criteria) this;
    }

    public Criteria andImageNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("image not between", head, tail, "image");
      return (Criteria) this;
    }

    public Criteria andTimeIsNull() {
      addCriterion("`time` is null");
      return (Criteria) this;
    }

    public Criteria andTimeIsNotNull() {
      addCriterion("`time` is not null");
      return (Criteria) this;
    }

    public Criteria andTimeEqualTo(String value) {
      if(value != null) addCriterion("`time` =", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeNotEqualTo(String value) {
      if(value != null) addCriterion("`time` <>", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeGreaterThan(String value) {
      if(value != null) addCriterion("`time` >", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("`time` >=", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeLessThan(String value) {
      if(value != null) addCriterion("`time` <", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("`time` <=", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeLike(String value) {
      if(value != null) addCriterion("`time` like", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeNotLike(String value) {
      if(value != null) addCriterion("`time` not like", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`time` in", values, "time");
      return (Criteria) this;
    }

    public Criteria andTimeNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`time` not in", values, "time");
      return (Criteria) this;
    }

    public Criteria andTimeBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`time` between", head, tail, "time");
      return (Criteria) this;
    }

    public Criteria andTimeNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`time` not between", head, tail, "time");
      return (Criteria) this;
    }

    public Criteria andEditerIsNull() {
      addCriterion("editer is null");
      return (Criteria) this;
    }

    public Criteria andEditerIsNotNull() {
      addCriterion("editer is not null");
      return (Criteria) this;
    }

    public Criteria andEditerEqualTo(String value) {
      if(value != null) addCriterion("editer =", value, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerNotEqualTo(String value) {
      if(value != null) addCriterion("editer <>", value, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerGreaterThan(String value) {
      if(value != null) addCriterion("editer >", value, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("editer >=", value, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerLessThan(String value) {
      if(value != null) addCriterion("editer <", value, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("editer <=", value, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerLike(String value) {
      if(value != null) addCriterion("editer like", value, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerNotLike(String value) {
      if(value != null) addCriterion("editer not like", value, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("editer in", values, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("editer not in", values, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("editer between", head, tail, "editer");
      return (Criteria) this;
    }

    public Criteria andEditerNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("editer not between", head, tail, "editer");
      return (Criteria) this;
    }

    public Criteria andCountIsNull() {
      addCriterion("`count` is null");
      return (Criteria) this;
    }

    public Criteria andCountIsNotNull() {
      addCriterion("`count` is not null");
      return (Criteria) this;
    }

    public Criteria andCountEqualTo(Integer value) {
      if(value != null) addCriterion("`count` =", value, "count");
      return (Criteria) this;
    }

    public Criteria andCountNotEqualTo(Integer value) {
      if(value != null) addCriterion("`count` <>", value, "count");
      return (Criteria) this;
    }

    public Criteria andCountGreaterThan(Integer value) {
      if(value != null) addCriterion("`count` >", value, "count");
      return (Criteria) this;
    }

    public Criteria andCountGreaterThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("`count` >=", value, "count");
      return (Criteria) this;
    }

    public Criteria andCountLessThan(Integer value) {
      if(value != null) addCriterion("`count` <", value, "count");
      return (Criteria) this;
    }

    public Criteria andCountLessThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("`count` <=", value, "count");
      return (Criteria) this;
    }

    public Criteria andCountIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`count` in", values, "count");
      return (Criteria) this;
    }

    public Criteria andCountNotIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`count` not in", values, "count");
      return (Criteria) this;
    }

    public Criteria andCountBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("`count` between", head, tail, "count");
      return (Criteria) this;
    }

    public Criteria andCountNotBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("`count` not between", head, tail, "count");
      return (Criteria) this;
    }

    public Criteria andCount1IsNull() {
      addCriterion("count1 is null");
      return (Criteria) this;
    }

    public Criteria andCount1IsNotNull() {
      addCriterion("count1 is not null");
      return (Criteria) this;
    }

    public Criteria andCount1EqualTo(Integer value) {
      if(value != null) addCriterion("count1 =", value, "count1");
      return (Criteria) this;
    }

    public Criteria andCount1NotEqualTo(Integer value) {
      if(value != null) addCriterion("count1 <>", value, "count1");
      return (Criteria) this;
    }

    public Criteria andCount1GreaterThan(Integer value) {
      if(value != null) addCriterion("count1 >", value, "count1");
      return (Criteria) this;
    }

    public Criteria andCount1GreaterThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("count1 >=", value, "count1");
      return (Criteria) this;
    }

    public Criteria andCount1LessThan(Integer value) {
      if(value != null) addCriterion("count1 <", value, "count1");
      return (Criteria) this;
    }

    public Criteria andCount1LessThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("count1 <=", value, "count1");
      return (Criteria) this;
    }

    public Criteria andCount1In(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("count1 in", values, "count1");
      return (Criteria) this;
    }

    public Criteria andCount1NotIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("count1 not in", values, "count1");
      return (Criteria) this;
    }

    public Criteria andCount1Between(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("count1 between", head, tail, "count1");
      return (Criteria) this;
    }

    public Criteria andCount1NotBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("count1 not between", head, tail, "count1");
      return (Criteria) this;
    }

    public Criteria andTypeIsNull() {
      addCriterion("`flag` is null");
      return (Criteria) this;
    }

    public Criteria andTypeIsNotNull() {
      addCriterion("`flag` is not null");
      return (Criteria) this;
    }

    public Criteria andTypeEqualTo(String value) {
      if(value != null) addCriterion("`flag` =", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotEqualTo(String value) {
      if(value != null) addCriterion("`flag` <>", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeGreaterThan(String value) {
      if(value != null) addCriterion("`flag` >", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("`flag` >=", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeLessThan(String value) {
      if(value != null) addCriterion("`flag` <", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("`flag` <=", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeLike(String value) {
      if(value != null) addCriterion("`flag` like", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotLike(String value) {
      if(value != null) addCriterion("`flag` not like", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`flag` in", values, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`flag` not in", values, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`flag` between", head, tail, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`flag` not between", head, tail, "flag");
      return (Criteria) this;
    }

    public Criteria andNoticeIsNull() {
      addCriterion("notice is null");
      return (Criteria) this;
    }

    public Criteria andNoticeIsNotNull() {
      addCriterion("notice is not null");
      return (Criteria) this;
    }

    public Criteria andNoticeEqualTo(String value) {
      if(value != null) addCriterion("notice =", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotEqualTo(String value) {
      if(value != null) addCriterion("notice <>", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeGreaterThan(String value) {
      if(value != null) addCriterion("notice >", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("notice >=", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeLessThan(String value) {
      if(value != null) addCriterion("notice <", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("notice <=", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeLike(String value) {
      if(value != null) addCriterion("notice like", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotLike(String value) {
      if(value != null) addCriterion("notice not like", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("notice in", values, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("notice not in", values, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("notice between", head, tail, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("notice not between", head, tail, "notice");
      return (Criteria) this;
    }

    public Criteria andKeywordsIsNull() {
      addCriterion("keywords is null");
      return (Criteria) this;
    }

    public Criteria andKeywordsIsNotNull() {
      addCriterion("keywords is not null");
      return (Criteria) this;
    }

    public Criteria andKeywordsEqualTo(String value) {
      if(value != null) addCriterion("keywords =", value, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsNotEqualTo(String value) {
      if(value != null) addCriterion("keywords <>", value, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsGreaterThan(String value) {
      if(value != null) addCriterion("keywords >", value, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("keywords >=", value, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsLessThan(String value) {
      if(value != null) addCriterion("keywords <", value, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("keywords <=", value, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsLike(String value) {
      if(value != null) addCriterion("keywords like", value, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsNotLike(String value) {
      if(value != null) addCriterion("keywords not like", value, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("keywords in", values, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("keywords not in", values, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("keywords between", head, tail, "keywords");
      return (Criteria) this;
    }

    public Criteria andKeywordsNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("keywords not between", head, tail, "keywords");
      return (Criteria) this;
    }
  }

  public static class Criteria extends GeneratedCriteria {
    private ArticleExample example;

    protected Criteria(ArticleExample example) {
      super();
      this.example = example;
    }

    public ArticleExample example() {
      return this.example;
    }
  }

  public static class Criterion {
    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}