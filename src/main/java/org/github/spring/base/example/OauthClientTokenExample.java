//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.example;

import java.util.ArrayList;
import java.util.List;

public class OauthClientTokenExample {
  protected String orderByClause;

  protected boolean distinct;

  protected List<Criteria> oredCriteria;

  public OauthClientTokenExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  public String getOrderByClause() {
    return orderByClause;
  }

  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  public boolean isDistinct() {
    return distinct;
  }

  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria(this);
    return criteria;
  }

  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andTokenIdIsNull() {
      addCriterion("token_id is null");
      return (Criteria) this;
    }

    public Criteria andTokenIdIsNotNull() {
      addCriterion("token_id is not null");
      return (Criteria) this;
    }

    public Criteria andTokenIdEqualTo(String value) {
      if(value != null) addCriterion("token_id =", value, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdNotEqualTo(String value) {
      if(value != null) addCriterion("token_id <>", value, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdGreaterThan(String value) {
      if(value != null) addCriterion("token_id >", value, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("token_id >=", value, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdLessThan(String value) {
      if(value != null) addCriterion("token_id <", value, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("token_id <=", value, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdLike(String value) {
      if(value != null) addCriterion("token_id like", value, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdNotLike(String value) {
      if(value != null) addCriterion("token_id not like", value, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("token_id in", values, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("token_id not in", values, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("token_id between", head, tail, "tokenId");
      return (Criteria) this;
    }

    public Criteria andTokenIdNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("token_id not between", head, tail, "tokenId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdIsNull() {
      addCriterion("authentication_id is null");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdIsNotNull() {
      addCriterion("authentication_id is not null");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdEqualTo(String value) {
      if(value != null) addCriterion("authentication_id =", value, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdNotEqualTo(String value) {
      if(value != null) addCriterion("authentication_id <>", value, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdGreaterThan(String value) {
      if(value != null) addCriterion("authentication_id >", value, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("authentication_id >=", value, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdLessThan(String value) {
      if(value != null) addCriterion("authentication_id <", value, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("authentication_id <=", value, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdLike(String value) {
      if(value != null) addCriterion("authentication_id like", value, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdNotLike(String value) {
      if(value != null) addCriterion("authentication_id not like", value, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("authentication_id in", values, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("authentication_id not in", values, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("authentication_id between", head, tail, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andAuthenticationIdNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("authentication_id not between", head, tail, "authenticationId");
      return (Criteria) this;
    }

    public Criteria andUserNameIsNull() {
      addCriterion("user_name is null");
      return (Criteria) this;
    }

    public Criteria andUserNameIsNotNull() {
      addCriterion("user_name is not null");
      return (Criteria) this;
    }

    public Criteria andUserNameEqualTo(String value) {
      if(value != null) addCriterion("user_name =", value, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameNotEqualTo(String value) {
      if(value != null) addCriterion("user_name <>", value, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameGreaterThan(String value) {
      if(value != null) addCriterion("user_name >", value, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("user_name >=", value, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameLessThan(String value) {
      if(value != null) addCriterion("user_name <", value, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("user_name <=", value, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameLike(String value) {
      if(value != null) addCriterion("user_name like", value, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameNotLike(String value) {
      if(value != null) addCriterion("user_name not like", value, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("user_name in", values, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("user_name not in", values, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("user_name between", head, tail, "userName");
      return (Criteria) this;
    }

    public Criteria andUserNameNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("user_name not between", head, tail, "userName");
      return (Criteria) this;
    }

    public Criteria andClientIdIsNull() {
      addCriterion("client_id is null");
      return (Criteria) this;
    }

    public Criteria andClientIdIsNotNull() {
      addCriterion("client_id is not null");
      return (Criteria) this;
    }

    public Criteria andClientIdEqualTo(String value) {
      if(value != null) addCriterion("client_id =", value, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdNotEqualTo(String value) {
      if(value != null) addCriterion("client_id <>", value, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdGreaterThan(String value) {
      if(value != null) addCriterion("client_id >", value, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("client_id >=", value, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdLessThan(String value) {
      if(value != null) addCriterion("client_id <", value, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("client_id <=", value, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdLike(String value) {
      if(value != null) addCriterion("client_id like", value, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdNotLike(String value) {
      if(value != null) addCriterion("client_id not like", value, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("client_id in", values, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("client_id not in", values, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("client_id between", head, tail, "clientId");
      return (Criteria) this;
    }

    public Criteria andClientIdNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("client_id not between", head, tail, "clientId");
      return (Criteria) this;
    }
  }

  public static class Criteria extends GeneratedCriteria {
    private OauthClientTokenExample example;

    protected Criteria(OauthClientTokenExample example) {
      super();
      this.example = example;
    }

    public OauthClientTokenExample example() {
      return this.example;
    }
  }

  public static class Criterion {
    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}