//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.example;

import java.util.ArrayList;
import java.util.List;

public class PhotoExample {
  protected String orderByClause;

  protected boolean distinct;

  protected List<Criteria> oredCriteria;

  public PhotoExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  public String getOrderByClause() {
    return orderByClause;
  }

  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  public boolean isDistinct() {
    return distinct;
  }

  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria(this);
    return criteria;
  }

  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andIdIsNull() {
      addCriterion("id is null");
      return (Criteria) this;
    }

    public Criteria andIdIsNotNull() {
      addCriterion("id is not null");
      return (Criteria) this;
    }

    public Criteria andIdEqualTo(Integer value) {
      if(value != null) addCriterion("id =", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotEqualTo(Integer value) {
      if(value != null) addCriterion("id <>", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThan(Integer value) {
      if(value != null) addCriterion("id >", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("id >=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThan(Integer value) {
      if(value != null) addCriterion("id <", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("id <=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("id in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("id not in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("id between", head, tail, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("id not between", head, tail, "id");
      return (Criteria) this;
    }

    public Criteria andImageIsNull() {
      addCriterion("image is null");
      return (Criteria) this;
    }

    public Criteria andImageIsNotNull() {
      addCriterion("image is not null");
      return (Criteria) this;
    }

    public Criteria andImageEqualTo(String value) {
      if(value != null) addCriterion("image =", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageNotEqualTo(String value) {
      if(value != null) addCriterion("image <>", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageGreaterThan(String value) {
      if(value != null) addCriterion("image >", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("image >=", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageLessThan(String value) {
      if(value != null) addCriterion("image <", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("image <=", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageLike(String value) {
      if(value != null) addCriterion("image like", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageNotLike(String value) {
      if(value != null) addCriterion("image not like", value, "image");
      return (Criteria) this;
    }

    public Criteria andImageIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("image in", values, "image");
      return (Criteria) this;
    }

    public Criteria andImageNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("image not in", values, "image");
      return (Criteria) this;
    }

    public Criteria andImageBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("image between", head, tail, "image");
      return (Criteria) this;
    }

    public Criteria andImageNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("image not between", head, tail, "image");
      return (Criteria) this;
    }

    public Criteria andNoteIsNull() {
      addCriterion("note is null");
      return (Criteria) this;
    }

    public Criteria andNoteIsNotNull() {
      addCriterion("note is not null");
      return (Criteria) this;
    }

    public Criteria andNoteEqualTo(String value) {
      if(value != null) addCriterion("note =", value, "note");
      return (Criteria) this;
    }

    public Criteria andNoteNotEqualTo(String value) {
      if(value != null) addCriterion("note <>", value, "note");
      return (Criteria) this;
    }

    public Criteria andNoteGreaterThan(String value) {
      if(value != null) addCriterion("note >", value, "note");
      return (Criteria) this;
    }

    public Criteria andNoteGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("note >=", value, "note");
      return (Criteria) this;
    }

    public Criteria andNoteLessThan(String value) {
      if(value != null) addCriterion("note <", value, "note");
      return (Criteria) this;
    }

    public Criteria andNoteLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("note <=", value, "note");
      return (Criteria) this;
    }

    public Criteria andNoteLike(String value) {
      if(value != null) addCriterion("note like", value, "note");
      return (Criteria) this;
    }

    public Criteria andNoteNotLike(String value) {
      if(value != null) addCriterion("note not like", value, "note");
      return (Criteria) this;
    }

    public Criteria andNoteIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("note in", values, "note");
      return (Criteria) this;
    }

    public Criteria andNoteNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("note not in", values, "note");
      return (Criteria) this;
    }

    public Criteria andNoteBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("note between", head, tail, "note");
      return (Criteria) this;
    }

    public Criteria andNoteNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("note not between", head, tail, "note");
      return (Criteria) this;
    }

    public Criteria andContentIsNull() {
      addCriterion("content is null");
      return (Criteria) this;
    }

    public Criteria andContentIsNotNull() {
      addCriterion("content is not null");
      return (Criteria) this;
    }

    public Criteria andContentEqualTo(String value) {
      if(value != null) addCriterion("content =", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentNotEqualTo(String value) {
      if(value != null) addCriterion("content <>", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentGreaterThan(String value) {
      if(value != null) addCriterion("content >", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("content >=", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentLessThan(String value) {
      if(value != null) addCriterion("content <", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("content <=", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentLike(String value) {
      if(value != null) addCriterion("content like", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentNotLike(String value) {
      if(value != null) addCriterion("content not like", value, "content");
      return (Criteria) this;
    }

    public Criteria andContentIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("content in", values, "content");
      return (Criteria) this;
    }

    public Criteria andContentNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("content not in", values, "content");
      return (Criteria) this;
    }

    public Criteria andContentBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("content between", head, tail, "content");
      return (Criteria) this;
    }

    public Criteria andContentNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("content not between", head, tail, "content");
      return (Criteria) this;
    }

    public Criteria andTypeIsNull() {
      addCriterion("`flag` is null");
      return (Criteria) this;
    }

    public Criteria andTypeIsNotNull() {
      addCriterion("`flag` is not null");
      return (Criteria) this;
    }

    public Criteria andTypeEqualTo(String value) {
      if(value != null) addCriterion("`flag` =", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotEqualTo(String value) {
      if(value != null) addCriterion("`flag` <>", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeGreaterThan(String value) {
      if(value != null) addCriterion("`flag` >", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("`flag` >=", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeLessThan(String value) {
      if(value != null) addCriterion("`flag` <", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("`flag` <=", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeLike(String value) {
      if(value != null) addCriterion("`flag` like", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotLike(String value) {
      if(value != null) addCriterion("`flag` not like", value, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`flag` in", values, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`flag` not in", values, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`flag` between", head, tail, "flag");
      return (Criteria) this;
    }

    public Criteria andTypeNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`flag` not between", head, tail, "flag");
      return (Criteria) this;
    }

    public Criteria andNoticeIsNull() {
      addCriterion("notice is null");
      return (Criteria) this;
    }

    public Criteria andNoticeIsNotNull() {
      addCriterion("notice is not null");
      return (Criteria) this;
    }

    public Criteria andNoticeEqualTo(String value) {
      if(value != null) addCriterion("notice =", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotEqualTo(String value) {
      if(value != null) addCriterion("notice <>", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeGreaterThan(String value) {
      if(value != null) addCriterion("notice >", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("notice >=", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeLessThan(String value) {
      if(value != null) addCriterion("notice <", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("notice <=", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeLike(String value) {
      if(value != null) addCriterion("notice like", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotLike(String value) {
      if(value != null) addCriterion("notice not like", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("notice in", values, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("notice not in", values, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("notice between", head, tail, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("notice not between", head, tail, "notice");
      return (Criteria) this;
    }

    public Criteria andTimeIsNull() {
      addCriterion("`time` is null");
      return (Criteria) this;
    }

    public Criteria andTimeIsNotNull() {
      addCriterion("`time` is not null");
      return (Criteria) this;
    }

    public Criteria andTimeEqualTo(String value) {
      if(value != null) addCriterion("`time` =", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeNotEqualTo(String value) {
      if(value != null) addCriterion("`time` <>", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeGreaterThan(String value) {
      if(value != null) addCriterion("`time` >", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("`time` >=", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeLessThan(String value) {
      if(value != null) addCriterion("`time` <", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("`time` <=", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeLike(String value) {
      if(value != null) addCriterion("`time` like", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeNotLike(String value) {
      if(value != null) addCriterion("`time` not like", value, "time");
      return (Criteria) this;
    }

    public Criteria andTimeIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`time` in", values, "time");
      return (Criteria) this;
    }

    public Criteria andTimeNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`time` not in", values, "time");
      return (Criteria) this;
    }

    public Criteria andTimeBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`time` between", head, tail, "time");
      return (Criteria) this;
    }

    public Criteria andTimeNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`time` not between", head, tail, "time");
      return (Criteria) this;
    }

    public Criteria andAlbumIdIsNull() {
      addCriterion("album_id is null");
      return (Criteria) this;
    }

    public Criteria andAlbumIdIsNotNull() {
      addCriterion("album_id is not null");
      return (Criteria) this;
    }

    public Criteria andAlbumIdEqualTo(Integer value) {
      if(value != null) addCriterion("album_id =", value, "albumId");
      return (Criteria) this;
    }

    public Criteria andAlbumIdNotEqualTo(Integer value) {
      if(value != null) addCriterion("album_id <>", value, "albumId");
      return (Criteria) this;
    }

    public Criteria andAlbumIdGreaterThan(Integer value) {
      if(value != null) addCriterion("album_id >", value, "albumId");
      return (Criteria) this;
    }

    public Criteria andAlbumIdGreaterThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("album_id >=", value, "albumId");
      return (Criteria) this;
    }

    public Criteria andAlbumIdLessThan(Integer value) {
      if(value != null) addCriterion("album_id <", value, "albumId");
      return (Criteria) this;
    }

    public Criteria andAlbumIdLessThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("album_id <=", value, "albumId");
      return (Criteria) this;
    }

    public Criteria andAlbumIdIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("album_id in", values, "albumId");
      return (Criteria) this;
    }

    public Criteria andAlbumIdNotIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("album_id not in", values, "albumId");
      return (Criteria) this;
    }

    public Criteria andAlbumIdBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("album_id between", head, tail, "albumId");
      return (Criteria) this;
    }

    public Criteria andAlbumIdNotBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("album_id not between", head, tail, "albumId");
      return (Criteria) this;
    }
  }

  public static class Criteria extends GeneratedCriteria {
    private PhotoExample example;

    protected Criteria(PhotoExample example) {
      super();
      this.example = example;
    }

    public PhotoExample example() {
      return this.example;
    }
  }

  public static class Criterion {
    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}