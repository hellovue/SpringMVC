//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.example;

import java.util.ArrayList;
import java.util.List;

public class ManagerExample {
  protected String orderByClause;

  protected boolean distinct;

  protected List<Criteria> oredCriteria;

  public ManagerExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  public String getOrderByClause() {
    return orderByClause;
  }

  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  public boolean isDistinct() {
    return distinct;
  }

  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria(this);
    return criteria;
  }

  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andIdIsNull() {
      addCriterion("id is null");
      return (Criteria) this;
    }

    public Criteria andIdIsNotNull() {
      addCriterion("id is not null");
      return (Criteria) this;
    }

    public Criteria andIdEqualTo(Integer value) {
      if(value != null) addCriterion("id =", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotEqualTo(Integer value) {
      if(value != null) addCriterion("id <>", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThan(Integer value) {
      if(value != null) addCriterion("id >", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("id >=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThan(Integer value) {
      if(value != null) addCriterion("id <", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThanOrEqualTo(Integer value) {
      if(value != null) addCriterion("id <=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("id in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotIn(List<Integer> values) {
      if (values != null && ! values.isEmpty()) addCriterion("id not in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("id between", head, tail, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotBetween(Integer head, Integer tail) {
      if(head != null && tail != null) addCriterion("id not between", head, tail, "id");
      return (Criteria) this;
    }

    public Criteria andAccountIsNull() {
      addCriterion("account is null");
      return (Criteria) this;
    }

    public Criteria andAccountIsNotNull() {
      addCriterion("account is not null");
      return (Criteria) this;
    }

    public Criteria andAccountEqualTo(String value) {
      if(value != null) addCriterion("account =", value, "account");
      return (Criteria) this;
    }

    public Criteria andAccountNotEqualTo(String value) {
      if(value != null) addCriterion("account <>", value, "account");
      return (Criteria) this;
    }

    public Criteria andAccountGreaterThan(String value) {
      if(value != null) addCriterion("account >", value, "account");
      return (Criteria) this;
    }

    public Criteria andAccountGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("account >=", value, "account");
      return (Criteria) this;
    }

    public Criteria andAccountLessThan(String value) {
      if(value != null) addCriterion("account <", value, "account");
      return (Criteria) this;
    }

    public Criteria andAccountLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("account <=", value, "account");
      return (Criteria) this;
    }

    public Criteria andAccountLike(String value) {
      if(value != null) addCriterion("account like", value, "account");
      return (Criteria) this;
    }

    public Criteria andAccountNotLike(String value) {
      if(value != null) addCriterion("account not like", value, "account");
      return (Criteria) this;
    }

    public Criteria andAccountIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("account in", values, "account");
      return (Criteria) this;
    }

    public Criteria andAccountNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("account not in", values, "account");
      return (Criteria) this;
    }

    public Criteria andAccountBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("account between", head, tail, "account");
      return (Criteria) this;
    }

    public Criteria andAccountNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("account not between", head, tail, "account");
      return (Criteria) this;
    }

    public Criteria andPasswordIsNull() {
      addCriterion("`password` is null");
      return (Criteria) this;
    }

    public Criteria andPasswordIsNotNull() {
      addCriterion("`password` is not null");
      return (Criteria) this;
    }

    public Criteria andPasswordEqualTo(String value) {
      if(value != null) addCriterion("`password` =", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotEqualTo(String value) {
      if(value != null) addCriterion("`password` <>", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordGreaterThan(String value) {
      if(value != null) addCriterion("`password` >", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("`password` >=", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordLessThan(String value) {
      if(value != null) addCriterion("`password` <", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("`password` <=", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordLike(String value) {
      if(value != null) addCriterion("`password` like", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotLike(String value) {
      if(value != null) addCriterion("`password` not like", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`password` in", values, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`password` not in", values, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`password` between", head, tail, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`password` not between", head, tail, "password");
      return (Criteria) this;
    }

    public Criteria andRoleIsNull() {
      addCriterion("`role` is null");
      return (Criteria) this;
    }

    public Criteria andRoleIsNotNull() {
      addCriterion("`role` is not null");
      return (Criteria) this;
    }

    public Criteria andRoleEqualTo(String value) {
      if(value != null) addCriterion("`role` =", value, "role");
      return (Criteria) this;
    }

    public Criteria andRoleNotEqualTo(String value) {
      if(value != null) addCriterion("`role` <>", value, "role");
      return (Criteria) this;
    }

    public Criteria andRoleGreaterThan(String value) {
      if(value != null) addCriterion("`role` >", value, "role");
      return (Criteria) this;
    }

    public Criteria andRoleGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("`role` >=", value, "role");
      return (Criteria) this;
    }

    public Criteria andRoleLessThan(String value) {
      if(value != null) addCriterion("`role` <", value, "role");
      return (Criteria) this;
    }

    public Criteria andRoleLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("`role` <=", value, "role");
      return (Criteria) this;
    }

    public Criteria andRoleLike(String value) {
      if(value != null) addCriterion("`role` like", value, "role");
      return (Criteria) this;
    }

    public Criteria andRoleNotLike(String value) {
      if(value != null) addCriterion("`role` not like", value, "role");
      return (Criteria) this;
    }

    public Criteria andRoleIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`role` in", values, "role");
      return (Criteria) this;
    }

    public Criteria andRoleNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("`role` not in", values, "role");
      return (Criteria) this;
    }

    public Criteria andRoleBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`role` between", head, tail, "role");
      return (Criteria) this;
    }

    public Criteria andRoleNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("`role` not between", head, tail, "role");
      return (Criteria) this;
    }

    public Criteria andNoticeIsNull() {
      addCriterion("notice is null");
      return (Criteria) this;
    }

    public Criteria andNoticeIsNotNull() {
      addCriterion("notice is not null");
      return (Criteria) this;
    }

    public Criteria andNoticeEqualTo(String value) {
      if(value != null) addCriterion("notice =", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotEqualTo(String value) {
      if(value != null) addCriterion("notice <>", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeGreaterThan(String value) {
      if(value != null) addCriterion("notice >", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeGreaterThanOrEqualTo(String value) {
      if(value != null) addCriterion("notice >=", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeLessThan(String value) {
      if(value != null) addCriterion("notice <", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeLessThanOrEqualTo(String value) {
      if(value != null) addCriterion("notice <=", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeLike(String value) {
      if(value != null) addCriterion("notice like", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotLike(String value) {
      if(value != null) addCriterion("notice not like", value, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("notice in", values, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotIn(List<String> values) {
      if (values != null && ! values.isEmpty()) addCriterion("notice not in", values, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("notice between", head, tail, "notice");
      return (Criteria) this;
    }

    public Criteria andNoticeNotBetween(String head, String tail) {
      if(head != null && tail != null) addCriterion("notice not between", head, tail, "notice");
      return (Criteria) this;
    }
  }

  public static class Criteria extends GeneratedCriteria {
    private ManagerExample example;

    protected Criteria(ManagerExample example) {
      super();
      this.example = example;
    }

    public ManagerExample example() {
      return this.example;
    }
  }

  public static class Criterion {
    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}