//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.mapper;

import java.util.List;
import javax.annotation.Nullable;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.exceptions.TooManyResultsException;
import org.github.spring.annotation.QueryInterface;
import org.github.spring.base.entity.ManagerEntity;
import org.github.spring.base.example.ManagerExample;
import org.github.spring.base.key.ManagerKey;
import org.github.spring.footstone.MyBatisMapper;

@QueryInterface
public interface ManagerMapper extends MyBatisMapper {
  long countByExample(ManagerExample example);

  int deleteByExample(ManagerExample example);

  @Delete({
    "delete from sampledb.manager",
    "where id = #{id,jdbcType=INTEGER}"
  })
  int deleteByPrimaryKey(ManagerKey key);

  @Insert({
    "insert into sampledb.manager (id, account, ",
    "`password`, `role`, ",
    "notice)",
    "values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, ",
    "#{password,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, ",
    "#{notice,jdbcType=VARCHAR})"
  })
  int insert(ManagerEntity record);

  int insertSelective(ManagerEntity record);

  List<ManagerEntity> selectByExample(ManagerExample example);

  @Select({
    "select",
    "id, account, `password`, `role`, notice",
    "from sampledb.manager",
    "where id = #{id,jdbcType=INTEGER}"
  })
  @ResultMap("org.github.spring.base.mapper.ManagerMapper.BaseResultMap")
  ManagerEntity selectByPrimaryKey(ManagerKey key);

  int updateByExampleSelective(@Param("record") ManagerEntity record, @Param("example") ManagerExample example);

  int updateByExample(@Param("record") ManagerEntity record, @Param("example") ManagerExample example);

  int updateByPrimaryKeySelective(ManagerEntity record);

  @Update({
    "update sampledb.manager",
    "set account = #{account,jdbcType=VARCHAR},",
      "`password` = #{password,jdbcType=VARCHAR},",
      "`role` = #{role,jdbcType=VARCHAR},",
      "notice = #{notice,jdbcType=VARCHAR}",
    "where id = #{id,jdbcType=INTEGER}"
  })
  int updateByPrimaryKey(ManagerEntity record);

  int batchInsert(List<ManagerEntity> list);

  int batchUpdate(List<ManagerEntity> list);

  int upsert(@Param("record") ManagerEntity record, @Param("array") String[] array);

  int upsertSelective(@Param("record") ManagerEntity record, @Param("array") String[] array);

  @Nullable
  ManagerEntity selectByUniqueKey(ManagerEntity record) throws TooManyResultsException;
}