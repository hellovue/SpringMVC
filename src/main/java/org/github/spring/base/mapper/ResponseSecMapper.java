//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.mapper;

import java.util.List;
import javax.annotation.Nullable;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.exceptions.TooManyResultsException;
import org.github.spring.annotation.QueryInterface;
import org.github.spring.base.entity.ResponseSecEntity;
import org.github.spring.base.example.ResponseSecExample;
import org.github.spring.base.key.ResponseSecKey;
import org.github.spring.footstone.MyBatisMapper;

@QueryInterface
public interface ResponseSecMapper extends MyBatisMapper {
  long countByExample(ResponseSecExample example);

  int deleteByExample(ResponseSecExample example);

  @Delete({
    "delete from sampledb.t_response_sec",
    "where respond_id = #{respondId,jdbcType=VARCHAR}"
  })
  int deleteByPrimaryKey(ResponseSecKey key);

  @Insert({
    "insert into sampledb.t_response_sec (respond_id, user_id, ",
    "`text`, create_time)",
    "values (#{respondId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
    "#{text,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})"
  })
  int insert(ResponseSecEntity record);

  int insertSelective(ResponseSecEntity record);

  List<ResponseSecEntity> selectByExample(ResponseSecExample example);

  @Select({
    "select",
    "respond_id, user_id, `text`, create_time",
    "from sampledb.t_response_sec",
    "where respond_id = #{respondId,jdbcType=VARCHAR}"
  })
  @ResultMap("org.github.spring.base.mapper.ResponseSecMapper.BaseResultMap")
  ResponseSecEntity selectByPrimaryKey(ResponseSecKey key);

  int updateByExampleSelective(@Param("record") ResponseSecEntity record, @Param("example") ResponseSecExample example);

  int updateByExample(@Param("record") ResponseSecEntity record, @Param("example") ResponseSecExample example);

  int updateByPrimaryKeySelective(ResponseSecEntity record);

  @Update({
    "update sampledb.t_response_sec",
    "set user_id = #{userId,jdbcType=VARCHAR},",
      "`text` = #{text,jdbcType=VARCHAR},",
      "create_time = #{createTime,jdbcType=TIMESTAMP}",
    "where respond_id = #{respondId,jdbcType=VARCHAR}"
  })
  int updateByPrimaryKey(ResponseSecEntity record);

  int batchInsert(List<ResponseSecEntity> list);

  int batchUpdate(List<ResponseSecEntity> list);

  int upsert(@Param("record") ResponseSecEntity record, @Param("array") String[] array);

  int upsertSelective(@Param("record") ResponseSecEntity record, @Param("array") String[] array);

  @Nullable
  ResponseSecEntity selectByUniqueKey(ResponseSecEntity record) throws TooManyResultsException;
}