//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.mapper;

import java.util.List;
import javax.annotation.Nullable;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.exceptions.TooManyResultsException;
import org.github.spring.annotation.QueryInterface;
import org.github.spring.base.blob.OauthAccessTokenWithBLOBs;
import org.github.spring.base.entity.OauthAccessTokenEntity;
import org.github.spring.base.example.OauthAccessTokenExample;
import org.github.spring.footstone.MyBatisMapper;

@QueryInterface
public interface OauthAccessTokenMapper extends MyBatisMapper {
  long countByExample(OauthAccessTokenExample example);

  int deleteByExample(OauthAccessTokenExample example);

  @Insert({
    "insert into sampledb.oauth_access_token (token_id, authentication_id, ",
    "user_name, refresh_token, ",
    "token, client_id, ",
    "authentication)",
    "values (#{tokenId,jdbcType=VARCHAR}, #{authenticationId,jdbcType=VARCHAR}, ",
    "#{userName,jdbcType=VARCHAR}, #{refreshToken,jdbcType=VARCHAR}, ",
    "#{token,jdbcType=LONGVARBINARY}, #{clientId,jdbcType=LONGVARCHAR}, ",
    "#{authentication,jdbcType=LONGVARBINARY})"
  })
  int insert(OauthAccessTokenWithBLOBs record);

  int insertSelective(OauthAccessTokenWithBLOBs record);

  List<OauthAccessTokenWithBLOBs> selectByExampleWithBLOBs(OauthAccessTokenExample example);

  List<OauthAccessTokenEntity> selectByExample(OauthAccessTokenExample example);

  int updateByExampleSelective(@Param("record") OauthAccessTokenWithBLOBs record, @Param("example") OauthAccessTokenExample example);

  int updateByExampleWithBLOBs(@Param("record") OauthAccessTokenWithBLOBs record, @Param("example") OauthAccessTokenExample example);

  int updateByExample(@Param("record") OauthAccessTokenEntity record, @Param("example") OauthAccessTokenExample example);

  int batchInsert(List<OauthAccessTokenEntity> list);

  int batchInsertWithBLOBs(List<OauthAccessTokenWithBLOBs> list);

  int batchUpdate(List<OauthAccessTokenEntity> list);

  int batchUpdateWithBLOBs(List<OauthAccessTokenWithBLOBs> list);

  int upsert(@Param("record") OauthAccessTokenWithBLOBs record, @Param("array") String[] array);

  int upsertSelective(@Param("record") OauthAccessTokenWithBLOBs record, @Param("array") String[] array);

  @Nullable
  OauthAccessTokenEntity selectByUniqueKey(OauthAccessTokenEntity record) throws TooManyResultsException;

  @Nullable
  OauthAccessTokenWithBLOBs selectByUniqueKeyWithBLOBs(OauthAccessTokenEntity record) throws TooManyResultsException;
}