//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.mapper;

import java.util.List;
import javax.annotation.Nullable;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.exceptions.TooManyResultsException;
import org.github.spring.annotation.QueryMapper;
import org.github.spring.base.blob.OauthClientTokenWithBLOBs;
import org.github.spring.base.entity.OauthClientTokenEntity;
import org.github.spring.base.example.OauthClientTokenExample;
import org.github.spring.footstone.MyBatisMapper;

@QueryMapper
public interface OauthClientTokenMapper extends MyBatisMapper {
  long countByExample(OauthClientTokenExample example);

  int deleteByExample(OauthClientTokenExample example);

  @Insert({
    "insert into sampledb.oauth_client_token (token_id, authentication_id, ",
    "user_name, client_id, ",
    "token)",
    "values (#{tokenId,jdbcType=VARCHAR}, #{authenticationId,jdbcType=VARCHAR}, ",
    "#{userName,jdbcType=VARCHAR}, #{clientId,jdbcType=VARCHAR}, ",
    "#{token,jdbcType=LONGVARBINARY})"
  })
  int insert(OauthClientTokenWithBLOBs record);

  int insertSelective(OauthClientTokenWithBLOBs record);

  List<OauthClientTokenWithBLOBs> selectByExampleWithBLOBs(OauthClientTokenExample example);

  List<OauthClientTokenEntity> selectByExample(OauthClientTokenExample example);

  int updateByExampleSelective(@Param("record") OauthClientTokenWithBLOBs record, @Param("example") OauthClientTokenExample example);

  int updateByExampleWithBLOBs(@Param("record") OauthClientTokenWithBLOBs record, @Param("example") OauthClientTokenExample example);

  int updateByExample(@Param("record") OauthClientTokenEntity record, @Param("example") OauthClientTokenExample example);

  int batchInsert(List<OauthClientTokenEntity> list);

  int batchInsertWithBLOBs(List<OauthClientTokenWithBLOBs> list);

  int batchUpdate(List<OauthClientTokenEntity> list);

  int batchUpdateWithBLOBs(List<OauthClientTokenWithBLOBs> list);

  int upsert(@Param("record") OauthClientTokenWithBLOBs record, @Param("array") String[] array);

  int upsertSelective(@Param("record") OauthClientTokenWithBLOBs record, @Param("array") String[] array);

  @Nullable
  OauthClientTokenEntity selectByUniqueKey(OauthClientTokenEntity record) throws TooManyResultsException;

  @Nullable
  OauthClientTokenWithBLOBs selectByUniqueKeyWithBLOBs(OauthClientTokenEntity record) throws TooManyResultsException;
}