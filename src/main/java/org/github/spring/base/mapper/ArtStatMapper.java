//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.mapper;

import java.util.List;
import javax.annotation.Nullable;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.exceptions.TooManyResultsException;
import org.github.spring.annotation.QueryInterface;
import org.github.spring.base.entity.ArtStatEntity;
import org.github.spring.base.example.ArtStatExample;
import org.github.spring.base.key.ArtStatKey;
import org.github.spring.footstone.MyBatisMapper;

@QueryInterface
public interface ArtStatMapper extends MyBatisMapper {
  long countByExample(ArtStatExample example);

  int deleteByExample(ArtStatExample example);

  @Delete({
    "delete from sampledb.t_art_stat",
    "where tid = #{tid,jdbcType=VARCHAR}"
  })
  int deleteByPrimaryKey(ArtStatKey key);

  @Insert({
    "insert into sampledb.t_art_stat (tid, read_count, ",
    "upvote)",
    "values (#{tid,jdbcType=VARCHAR}, #{readCount,jdbcType=INTEGER}, ",
    "#{upvote,jdbcType=INTEGER})"
  })
  int insert(ArtStatEntity record);

  int insertSelective(ArtStatEntity record);

  List<ArtStatEntity> selectByExample(ArtStatExample example);

  @Select({
    "select",
    "tid, read_count, upvote",
    "from sampledb.t_art_stat",
    "where tid = #{tid,jdbcType=VARCHAR}"
  })
  @ResultMap("org.github.spring.base.mapper.ArtStatMapper.BaseResultMap")
  ArtStatEntity selectByPrimaryKey(ArtStatKey key);

  int updateByExampleSelective(@Param("record") ArtStatEntity record, @Param("example") ArtStatExample example);

  int updateByExample(@Param("record") ArtStatEntity record, @Param("example") ArtStatExample example);

  int updateByPrimaryKeySelective(ArtStatEntity record);

  @Update({
    "update sampledb.t_art_stat",
    "set read_count = #{readCount,jdbcType=INTEGER},",
      "upvote = #{upvote,jdbcType=INTEGER}",
    "where tid = #{tid,jdbcType=VARCHAR}"
  })
  int updateByPrimaryKey(ArtStatEntity record);

  int batchInsert(List<ArtStatEntity> list);

  int batchUpdate(List<ArtStatEntity> list);

  int upsert(@Param("record") ArtStatEntity record, @Param("array") String[] array);

  int upsertSelective(@Param("record") ArtStatEntity record, @Param("array") String[] array);

  @Nullable
  ArtStatEntity selectByUniqueKey(ArtStatEntity record) throws TooManyResultsException;
}