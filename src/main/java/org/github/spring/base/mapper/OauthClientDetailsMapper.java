//*****************************************************************************
// The file is automatically generated by the program, do not manually modify. 
//*****************************************************************************

package org.github.spring.base.mapper;

import java.util.List;
import javax.annotation.Nullable;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.exceptions.TooManyResultsException;
import org.github.spring.annotation.QueryInterface;
import org.github.spring.base.entity.OauthClientDetailsEntity;
import org.github.spring.base.example.OauthClientDetailsExample;
import org.github.spring.base.key.OauthClientDetailsKey;
import org.github.spring.footstone.MyBatisMapper;

@QueryInterface
public interface OauthClientDetailsMapper extends MyBatisMapper {
  long countByExample(OauthClientDetailsExample example);

  int deleteByExample(OauthClientDetailsExample example);

  @Delete({
    "delete from sampledb.oauth_client_details",
    "where client_id = #{clientId,jdbcType=VARCHAR}"
  })
  int deleteByPrimaryKey(OauthClientDetailsKey key);

  @Insert({
    "insert into sampledb.oauth_client_details (client_id, resource_ids, ",
    "client_secret, `scope`, ",
    "authorized_grant_types, web_server_redirect_uri, ",
    "authorities, access_token_validity, ",
    "refresh_token_validity, additional_information, ",
    "autoapprove)",
    "values (#{clientId,jdbcType=VARCHAR}, #{resourceIds,jdbcType=VARCHAR}, ",
    "#{clientSecret,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}, ",
    "#{authorizedGrantTypes,jdbcType=VARCHAR}, #{webServerRedirectUri,jdbcType=VARCHAR}, ",
    "#{authorities,jdbcType=VARCHAR}, #{accessTokenValidity,jdbcType=INTEGER}, ",
    "#{refreshTokenValidity,jdbcType=INTEGER}, #{additionalInformation,jdbcType=VARCHAR}, ",
    "#{autoapprove,jdbcType=VARCHAR})"
  })
  int insert(OauthClientDetailsEntity record);

  int insertSelective(OauthClientDetailsEntity record);

  List<OauthClientDetailsEntity> selectByExample(OauthClientDetailsExample example);

  @Select({
    "select",
    "client_id, resource_ids, client_secret, `scope`, authorized_grant_types, web_server_redirect_uri, ",
    "authorities, access_token_validity, refresh_token_validity, additional_information, ",
    "autoapprove",
    "from sampledb.oauth_client_details",
    "where client_id = #{clientId,jdbcType=VARCHAR}"
  })
  @ResultMap("org.github.spring.base.mapper.OauthClientDetailsMapper.BaseResultMap")
  OauthClientDetailsEntity selectByPrimaryKey(OauthClientDetailsKey key);

  int updateByExampleSelective(@Param("record") OauthClientDetailsEntity record, @Param("example") OauthClientDetailsExample example);

  int updateByExample(@Param("record") OauthClientDetailsEntity record, @Param("example") OauthClientDetailsExample example);

  int updateByPrimaryKeySelective(OauthClientDetailsEntity record);

  @Update({
    "update sampledb.oauth_client_details",
    "set resource_ids = #{resourceIds,jdbcType=VARCHAR},",
      "client_secret = #{clientSecret,jdbcType=VARCHAR},",
      "`scope` = #{scope,jdbcType=VARCHAR},",
      "authorized_grant_types = #{authorizedGrantTypes,jdbcType=VARCHAR},",
      "web_server_redirect_uri = #{webServerRedirectUri,jdbcType=VARCHAR},",
      "authorities = #{authorities,jdbcType=VARCHAR},",
      "access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},",
      "refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},",
      "additional_information = #{additionalInformation,jdbcType=VARCHAR},",
      "autoapprove = #{autoapprove,jdbcType=VARCHAR}",
    "where client_id = #{clientId,jdbcType=VARCHAR}"
  })
  int updateByPrimaryKey(OauthClientDetailsEntity record);

  int batchInsert(List<OauthClientDetailsEntity> list);

  int batchUpdate(List<OauthClientDetailsEntity> list);

  int upsert(@Param("record") OauthClientDetailsEntity record, @Param("array") String[] array);

  int upsertSelective(@Param("record") OauthClientDetailsEntity record, @Param("array") String[] array);

  @Nullable
  OauthClientDetailsEntity selectByUniqueKey(OauthClientDetailsEntity record) throws TooManyResultsException;
}